<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="bach.combinevoices" module="bach" kind="patcher">

	<digest>
		Combine voices into a new bach.roll or bach.score
	</digest>

	<description>
		Takes in input a list of <o>bach.roll</o>'s or <o>bach.score</o>'s gathered syntaxes and
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">bachproject</metadata>
		<metadata name="tag">bach</metadata>
		<metadata name="tag">bach abstractions</metadata>
		<metadata name="tag">bach notation</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				List of bach.score's or bach.roll's gathered syntaxes
			</digest>
			<description>
				The llll musc contain the bach.roll's or bach.score's gathered syntax,
				one level of parenthesis for each one of them (so, for instance, you can append their dump
				output via a <o>bach.join</o> with <m>inwrap</m> 1).
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				The gathered syntax of the combined bach.roll or bach.score
			</digest>
			<description>
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="bang">
			<arglist />
			<digest>
				Combine voices
			</digest>
			<description>
				Combines the most recently received input lllls.
			</description>
		</method>
		<method name="llll">
			<arglist />
			<digest>
				Combine incoming voices and output result
			</digest>
			<description>
				<o>bach.combinevoices</o> expects a list of bach.roll's or bach.score's gathered-syntax
				dump, each wrapped in a level of parenthesis (for instance, by using <o>bach.join</o> with <m>inwrap</m> 1).
				Once it receives such list, it combines all the voices of the received objects into a new bach.roll
				or bach.score, listing all the voices one by one, in the intput order. <br />
				If you don't want all the voices of some bach.roll or bach.score to be considered,
				you can use the <m>subroll</m> or <m>subscore</m> messages instead of the simple <m>dump</m>.
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="    " get="1" set="1" type="" size="1">
			<digest>
				
			</digest>
			<description>
				Index of incoming bach.roll or bach.score whose commands must be
				preserved in the output. By default this is 1 (the first). Leave it to 0
				if you don't want to have any commands output.
			</description>
			<attributelist>
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="commands" get="1" set="1" type="int" size="1">
			<digest>
				Preserve Commands
			</digest>
			<description>
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Preserve Commands" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="out" get="1" set="1" type="symbol" size="1">
			<digest>
				Outlet Types
			</digest>
			<description>
				The <m>out</m> attribute is a sequence of characters identifying the outlet types (one character for each llll outlet). Characters can be one of the following: <br />
				<m>n</m> (default): 'native' output: faster and more precise between bach objects, but unreadable by standard Max objects (an "bach.llll" message appears instead). <br />
				<m>t</m>: 'text' output: slower and limited in size, but readable by standard Max objects. A plain llll in text format is a generic Max message.
				To keep the representation invertible (i.e., to allow a bach object receiving a text-format llll to interpret it exactly as if it was native format,
				except for the size limitation), some specific kinds of symbols are preceded by a backtick: namely, symbols containing parens, or containing textual
				representations of numbers or pitches, or beginning with a backtick, plus the symbols "null" and "nil" (distinct from the reserved words
				"null" and "nil" representing the empty list and the empty sublist) are preceded by a backtick. Moreover, the symbols "int", "float" or "list"
				are preceded by a backtick only if they are the first element of an llll, to distinguish them from the corresponding reserved messages of Max. <br />
				<m>m</m>: 'max' output: mostly equivalent to the "t" specifier, but no symbol is backticket except "int", "float" and "list" at the beginning of an llll.
				It is important to notice that, differently from text-format lllls proper, Max-format lllls might not be invertible even if they do not reach the size
				limit for Max message. This means that a bach object receiving a Max-format llll output from another bach object might interpret it differently
				from the original, or in some cases might even reject it. <br />
				<m>x</m>: disabled output (nothing is output) <br />
				<m>p</m>: 'portal' output: only used by bach.portal to intercept the @out attribute specified while creating the abstraction (see bach.portal). <br />
				The native output is recommended, unless communication with standard Max messages is needed.
				Disabling unused outputs can be useful if extreme optimization of the patch is needed.
				<br /> <br />
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outlet Types" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="slotinfo" get="1" set="1" type="int" size="1">
			<digest>
				Preserve Slotinfo
			</digest>
			<description>
				Index of incoming bach.roll or bach.score whose slotinfo must be
				preserved in the output. By default this is 1 (the first). Leave it to 0
				if you don't want to have any slotinfo output.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Preserve Slotinfo" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--DISCUSSION-->
	<discussion>
		Markers and all flags (such as solo/mute flags) are all preserved and combined.
	</discussion>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="bach.roll" />
		<seealso name="bach.score" />
		<seealso name="bach.join" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (llll)">
			<description>
				List of bach.score's or bach.roll's gathered syntaxes.
				The llll musc contain the bach.roll's or bach.score's gathered syntax,
				one level of parenthesis for each one of them (so, for instance, you can append their dump
				output via a <o>bach.join</o> with <m>inwrap</m> 1).
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1 (llll)">
			<description>
				The gathered syntax of the combined bach.roll or bach.score.
			</description>
		</entry>
	</misc>

	<misc name = "Discussion">
		<entry name ="More details">
			<description>
		Markers and all flags (such as solo/mute flags) are all preserved and combined.
			</description>
		</entry>
		<entry name ="Keywords">
			<description>
join, combine, voice, measured, proportional.
			</description>
		</entry>
	</misc>

</c74object>