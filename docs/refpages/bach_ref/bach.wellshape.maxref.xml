<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="bach.wellshape" module="bach" kind="patcher">

	<digest>
		Force matrix to be properly rectangular
	</digest>

	<description>
		Pads the rows of an incoming matrix, in order to
		have it properly rectangular (thus well-shaped).
		It wraps elements too, if needed.
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">bachproject</metadata>
		<metadata name="tag">bach</metadata>
		<metadata name="tag">bach abstractions</metadata>
		<metadata name="tag">bach matrix calculus</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				The matrix to be made properly rectangular
			</digest>
			<description>
			</description>
		</inlet>
		<inlet id="1" type="INLET_TYPE">
			<digest>
				The padding element
			</digest>
			<description>
				An llll in the second inlet sets instead the padding element, which will
				be used to fill any defective line while performing the rectangularization.
				(see the <m>padelem</m> argument).
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				
			</digest>
			<description>
			</description>
		</outlet>
		<outlet id="1" type="INLET_TYPE">
			<digest>
				The matrix made properly rectangular
			</digest>
			<description>
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="padelem" optional="1" type="llll">
			<digest>
				Padding element
			</digest>
			<description>
				The padding element is the element used to
				to fill any defective line while performing the rectangularization.
				This is usually a single atom (number or symbol), but can also be a complex
				llll, provided that it has length 1. For instance <b>[12 13]</b> is fine, whereas
				if one puts <b>12 13</b> only the first number will be accounted for.
				By default this is 0.
			</description>
		</objarg>
		<objarg name="numrows" optional="1" type="int/none">
			<digest>
				Number of rows
			</digest>
			<description>
				The number of rows of the output matrix, or "none" (default) to autodetect.
			</description>
		</objarg>
		<objarg name="numcols" optional="1" type="int/none">
			<digest>
				Number of columns
			</digest>
			<description>
				The number of columns of the output matrix, or "none" (default) to autodetect.
			</description>
		</objarg>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="bang">
			<arglist />
			<digest>
				Output well-shaped matrix
			</digest>
			<description>
				Forces the most recently received input matrix
				to be properly rectangular
			</description>
		</method>
		<method name="llll">
			<arglist />
			<digest>
				Function depends on inlet
			</digest>
			<description>
				An llll in the first inlet is interpreted as the matrix
				which needs to be made properly rectangular. Such matrix is thus put in
				rectangular shape (possibly with a given number of rows and columns,
				if the attributes <m>numrows</m> and <m>numcols</m> are set to an integer)
				and then output. <br />
				An llll in the second inlet sets instead the padding element, which will
				be used to fill any defective line while performing the rectangularization
				(see the <m>padelem</m> argument).
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="numcols" get="1" set="1" type="atom" size="1">
			<digest>
				Number Of Columns
			</digest>
			<description>
				Sets the number of columns of the output matrix. Leave "none"
				to autodetect (default).
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Number Of Columns" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="numrows" get="1" set="1" type="atom" size="1">
			<digest>
				Number Of Rows
			</digest>
			<description>
				Sets the number of rows of the output matrix. Leave "none"
				to autodetect (default).
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Number Of Rows" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="out" get="1" set="1" type="symbol" size="1">
			<digest>
				Outlet Types
			</digest>
			<description>
				The <m>out</m> attribute is a sequence of characters identifying the outlet types (one character for each llll outlet). Characters can be one of the following: <br />
				<m>n</m> (default): 'native' output: faster and more precise between bach objects, but unreadable by standard Max objects (an "bach.llll" message appears instead). <br />
				<m>t</m>: 'text' output: slower and limited in size, but readable by standard Max objects. A plain llll in text format is a generic Max message.
				To keep the representation invertible (i.e., to allow a bach object receiving a text-format llll to interpret it exactly as if it was native format,
				except for the size limitation), some specific kinds of symbols are preceded by a backtick: namely, symbols containing parens, or containing textual
				representations of numbers or pitches, or beginning with a backtick, plus the symbols "null" and "nil" (distinct from the reserved words
				"null" and "nil" representing the empty list and the empty sublist) are preceded by a backtick. Moreover, the symbols "int", "float" or "list"
				are preceded by a backtick only if they are the first element of an llll, to distinguish them from the corresponding reserved messages of Max. <br />
				<m>m</m>: 'max' output: mostly equivalent to the "t" specifier, but no symbol is backticket except "int", "float" and "list" at the beginning of an llll.
				It is important to notice that, differently from text-format lllls proper, Max-format lllls might not be invertible even if they do not reach the size
				limit for Max message. This means that a bach object receiving a Max-format llll output from another bach object might interpret it differently
				from the original, or in some cases might even reject it. <br />
				<m>x</m>: disabled output (nothing is output) <br />
				<m>p</m>: 'portal' output: only used by bach.portal to intercept the @out attribute specified while creating the abstraction (see bach.portal). <br />
				The native output is recommended, unless communication with standard Max messages is needed.
				Disabling unused outputs can be useful if extreme optimization of the patch is needed.
				<br /> <br />
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outlet Types" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--DISCUSSION-->
	<discussion>
		In the bach environment, a matrix is just a llll having depth two, whose first-level sublllls are the rows of the matrix.
		For instance the matrix <b>[1 0 0] [0 1 0] [0 0 1]</b> is the 3 by 3 identity matrix. A "good" matrix is supposed to be well formed,
		i.e. all its rows must have the same length. A matrix is square if the length of the rows (which is the number of columns) is the same
		as the number of rows.
		<br /> <br />
	</discussion>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="bach.minfo" />
		<seealso name="bach.m2jitcellblock" />
		<seealso name="16-Into The Matrix" module="bach" type="tutorial" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (llll)">
			<description>
				The matrix to be made properly rectangular.
			</description>
		</entry>
		<entry name ="Inlet 2 (number/symbol/llll)">
			<description>
				The padding element.
				An llll in the second inlet sets instead the padding element, which will
				be used to fill any defective line while performing the rectangularization.
				(see the <m>padelem</m> argument).
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1">
			<description>
				.
			</description>
		</entry>
		<entry name ="Outlet 2 (llll)">
			<description>
				The matrix made properly rectangular.
			</description>
		</entry>
	</misc>

	<misc name = "Discussion">
		<entry name ="More details">
			<description>
		In the bach environment, a matrix is just a llll having depth two, whose first-level sublllls are the rows of the matrix.
		For instance the matrix <b>[1 0 0] [0 1 0] [0 0 1]</b> is the 3 by 3 identity matrix. A "good" matrix is supposed to be well formed,
		i.e. all its rows must have the same length. A matrix is square if the length of the rows (which is the number of columns) is the same
		as the number of rows.
		<br /> <br />
			</description>
		</entry>
		<entry name ="Keywords">
			<description>
well-shaped, row, column, number, matrix, rectangle, wrap, force, constraint.
			</description>
		</entry>
	</misc>

</c74object>