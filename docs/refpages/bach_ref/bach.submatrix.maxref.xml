<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="bach.submatrix" module="bach">

	<digest>
		Get a submatrix of a matrix
	</digest>

	<description>
		Trims and outputs a rectangular portion of a matrix.
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">bachproject</metadata>
		<metadata name="tag">bach</metadata>
		<metadata name="tag">bach objects</metadata>
		<metadata name="tag">bach matrix calculus</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				Matrix to be trimmed
			</digest>
			<description>
			</description>
		</inlet>
		<inlet id="1" type="INLET_TYPE">
			<digest>
				Starting row for trimming
			</digest>
			<description>
			</description>
		</inlet>
		<inlet id="2" type="INLET_TYPE">
			<digest>
				Starting column for trimming
			</digest>
			<description>
			</description>
		</inlet>
		<inlet id="3" type="INLET_TYPE">
			<digest>
				Ending row for trimming
			</digest>
			<description>
			</description>
		</inlet>
		<inlet id="4" type="INLET_TYPE">
			<digest>
				Ending column for trimming
			</digest>
			<description>
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				
			</digest>
			<description>
			</description>
		</outlet>
		<outlet id="1" type="INLET_TYPE">
			<digest>
				Trimmed submatrix
			</digest>
			<description>
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="startrow" optional="1" type="int">
			<digest>
				Starting row for trimming
			</digest>
			<description>
				Set the starting row for trimming.
			</description>
		</objarg>
		<objarg name="startcolumn" optional="1" type="int">
			<digest>
				Starting column for trimming
			</digest>
			<description>
				Set the starting column for trimming.
			</description>
		</objarg>
		<objarg name="endrow" optional="1" type="int">
			<digest>
				Ending row for trimming
			</digest>
			<description>
				Set the ending row for trimming.
			</description>
		</objarg>
		<objarg name="endcolumn" optional="1" type="int">
			<digest>
				ending column for trimming
			</digest>
			<description>
				Set the ending column for trimming.
			</description>
		</objarg>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="int">
			<arglist />
			<digest>
				Set a boundary
			</digest>
			<description>
				The action depends on the inlet: <br />
				- in the second inlet: Sets the starting row for trimming <br />
				- in the third inlet: Sets the starting column for trimming <br />
				- in the fourth inlet: Sets the ending row for trimming <br />
				- in the fifth inlet: Sets the ending column for trimming
			</description>
		</method>
		<method name="list">
			<arglist />
			<digest>
				Set all the boundaries at once
			</digest>
			<description>
				In the second inlet, a list of four integer numbers sets all the resize boundaries at once.
				Also see the <m>int</m> message.
			</description>
		</method>
		<method name="llll">
			<arglist />
			<digest>
				Set original matrix and output submatrix
			</digest>
			<description>
				The original matrix is trimmed and the result is output. <br />
				In the bach environment, a matrix is just a llll having depth two, whose first-level sublllls are the rows of the matrix.
				For instance the matrix <b>[1 0 0] [0 1 0] [0 0 1]</b> is the 3 by 3 identity matrix. A "good" matrix is supposed to be well formed,
				i.e. all its rows must have the same length. A matrix is square if the length of the rows (which is the number of columns) is the same
				as the number of rows.
				<br /> <br />
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="out" get="1" set="1" type="symbol" size="1">
			<digest>
				Outlet Types
			</digest>
			<description>
				The <m>out</m> attribute is a sequence of characters identifying the outlet types (one character for each llll outlet). Characters can be one of the following: <br />
				<m>n</m> (default): 'native' output: faster and more precise between bach objects, but unreadable by standard Max objects (an "bach.llll" message appears instead). <br />
				<m>t</m>: 'text' output: slower and limited in size, but readable by standard Max objects. A plain llll in text format is a generic Max message.
				To keep the representation invertible (i.e., to allow a bach object receiving a text-format llll to interpret it exactly as if it was native format,
				except for the size limitation), some specific kinds of symbols are preceded by a backtick: namely, symbols containing parens, or containing textual
				representations of numbers or pitches, or beginning with a backtick, plus the symbols "null" and "nil" (distinct from the reserved words
				"null" and "nil" representing the empty list and the empty sublist) are preceded by a backtick. Moreover, the symbols "int", "float" or "list"
				are preceded by a backtick only if they are the first element of an llll, to distinguish them from the corresponding reserved messages of Max. <br />
				<m>m</m>: 'max' output: mostly equivalent to the "t" specifier, but no symbol is backticket except "int", "float" and "list" at the beginning of an llll.
				It is important to notice that, differently from text-format lllls proper, Max-format lllls might not be invertible even if they do not reach the size
				limit for Max message. This means that a bach object receiving a Max-format llll output from another bach object might interpret it differently
				from the original, or in some cases might even reject it. <br />
				<m>x</m>: disabled output (nothing is output) <br />
				<m>p</m>: 'portal' output: only used by bach.portal to intercept the @out attribute specified while creating the abstraction (see bach.portal). <br />
				The native output is recommended, unless communication with standard Max messages is needed.
				Disabling unused outputs can be useful if extreme optimization of the patch is needed.
				<br /> <br />
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outlet Types" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--DISCUSSION-->
	<discussion>
		In the bach environment, a matrix is just a llll having depth two, whose first-level sublllls are the rows of the matrix.
		For instance the matrix <b>[1 0 0] [0 1 0] [0 0 1]</b> is the 3 by 3 identity matrix. A "good" matrix is supposed to be well formed,
		i.e. all its rows must have the same length. A matrix is square if the length of the rows (which is the number of columns) is the same
		as the number of rows.
		<br /> <br />
	</discussion>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="bach.minfo" />
		<seealso name="bach.diag" />
		<seealso name="bach.idmatrix" />
		<seealso name="bach.wellshape" />
		<seealso name="bach.m2jitcellblock" />
		<seealso name="16-Into The Matrix" module="bach" type="tutorial" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (llll)">
			<description>
				Matrix to be trimmed.
			</description>
		</entry>
		<entry name ="Inlet 2 (int)">
			<description>
				Starting row for trimming.
			</description>
		</entry>
		<entry name ="Inlet 3 (int)">
			<description>
				Starting column for trimming.
			</description>
		</entry>
		<entry name ="Inlet 4 (int)">
			<description>
				Ending row for trimming.
			</description>
		</entry>
		<entry name ="Inlet 5 (int)">
			<description>
				Ending column for trimming.
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1">
			<description>
				.
			</description>
		</entry>
		<entry name ="Outlet 2 (llll)">
			<description>
				Trimmed submatrix.
			</description>
		</entry>
	</misc>

	<misc name = "Discussion">
		<entry name ="More details">
			<description>
		In the bach environment, a matrix is just a llll having depth two, whose first-level sublllls are the rows of the matrix.
		For instance the matrix <b>[1 0 0] [0 1 0] [0 0 1]</b> is the 3 by 3 identity matrix. A "good" matrix is supposed to be well formed,
		i.e. all its rows must have the same length. A matrix is square if the length of the rows (which is the number of columns) is the same
		as the number of rows.
		<br /> <br />
			</description>
		</entry>
		<entry name ="Keywords">
			<description>
matrix, crop, cut, slice.
			</description>
		</entry>
	</misc>

</c74object>