<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="bach.fft" module="bach" category="Math">

	<digest>
		Fast Fourier transform for lllls
	</digest>

	<description>
		Performs the Fast Fourier transform on
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">bachproject</metadata>
		<metadata name="tag">bach</metadata>
		<metadata name="tag">bach objects</metadata>
		<metadata name="tag">bach math</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				Input amplitudes or real (x) parts
			</digest>
			<description>
				Depending on the object "polar" attribute, this can accept either the incoming
				amplitudes, or the incoming real parts of the numbers
			</description>
		</inlet>
		<inlet id="1" type="INLET_TYPE">
			<digest>
				Input phases or imaginary (y) parts
			</digest>
			<description>
				Depending on the object "polar" attribute, this can accept either the incoming
				phases (in radiants), or the incoming imaginary parts of the numbers
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				Output amplitude or real (x) parts
			</digest>
			<description>
			</description>
		</outlet>
		<outlet id="1" type="INLET_TYPE">
			<digest>
				Output phases (in radiants) or imaginary (y) parts
			</digest>
			<description>
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="bang">
			<arglist />
			<digest>
				Perform the FFT
			</digest>
			<description>
				Perform the FFT operation on the most recently received input value.
			</description>
		</method>
		<method name="llll">
			<arglist />
			<digest>
				Perform the FFT of the incoming llll
			</digest>
			<description>
				The algorithm performs the FFT on the incoming data, assumed to be a plain llll.
				The library used to perform such task is kiss_fft.
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="inv" get="1" set="1" type="int" size="1">
			<digest>
				Perform Inverse FFT
			</digest>
			<description>
				Perform the inverse FFT, instead of the direct one.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Perform Inverse FFT" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="out" get="1" set="1" type="symbol" size="1">
			<digest>
				Outlet Types
			</digest>
			<description>
				The <m>out</m> attribute is a sequence of characters identifying the outlet types (one character for each llll outlet). Characters can be one of the following: <br />
				<m>n</m> (default): 'native' output: faster and more precise between bach objects, but unreadable by standard Max objects (an "bach.llll" message appears instead). <br />
				<m>t</m>: 'text' output: slower and limited in size, but readable by standard Max objects. A plain llll in text format is a generic Max message.
				To keep the representation invertible (i.e., to allow a bach object receiving a text-format llll to interpret it exactly as if it was native format,
				except for the size limitation), some specific kinds of symbols are preceded by a backtick: namely, symbols containing parens, or containing textual
				representations of numbers or pitches, or beginning with a backtick, plus the symbols "null" and "nil" (distinct from the reserved words
				"null" and "nil" representing the empty list and the empty sublist) are preceded by a backtick. Moreover, the symbols "int", "float" or "list"
				are preceded by a backtick only if they are the first element of an llll, to distinguish them from the corresponding reserved messages of Max. <br />
				<m>m</m>: 'max' output: mostly equivalent to the "t" specifier, but no symbol is backticket except "int", "float" and "list" at the beginning of an llll.
				It is important to notice that, differently from text-format lllls proper, Max-format lllls might not be invertible even if they do not reach the size
				limit for Max message. This means that a bach object receiving a Max-format llll output from another bach object might interpret it differently
				from the original, or in some cases might even reject it. <br />
				<m>x</m>: disabled output (nothing is output) <br />
				<m>p</m>: 'portal' output: only used by bach.portal to intercept the @out attribute specified while creating the abstraction (see bach.portal). <br />
				The native output is recommended, unless communication with standard Max messages is needed.
				Disabling unused outputs can be useful if extreme optimization of the patch is needed.
				<br /> <br />
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outlet Types" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="polar" get="1" set="1" type="int" size="1">
			<digest>
				Polar Input And Output
			</digest>
			<description>
				Output data in polar coordinates, instead of cartesian ones.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Polar Input And Output" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--DISCUSSION-->
	<discussion>
		The algorithm used is the one provided by the library kiss_fft
	</discussion>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="fft~" />
		<seealso name="bach.expr" />
		<seealso name="bach.pol2car" />
		<seealso name="bach.car2pol" />
		<seealso name="bach.resample" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (llll)">
			<description>
				Input amplitudes or real (x) parts.
				Depending on the object "polar" attribute, this can accept either the incoming
				amplitudes, or the incoming real parts of the numbers
			</description>
		</entry>
		<entry name ="Inlet 2 (llll)">
			<description>
				Input phases or imaginary (y) parts.
				Depending on the object "polar" attribute, this can accept either the incoming
				phases (in radiants), or the incoming imaginary parts of the numbers
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1 (llll)">
			<description>
				Output amplitude or real (x) parts.
			</description>
		</entry>
		<entry name ="Outlet 2 (llll)">
			<description>
				Output phases (in radiants) or imaginary (y) parts.
			</description>
		</entry>
	</misc>

	<misc name = "Discussion">
		<entry name ="More details">
			<description>
		The algorithm used is the one provided by the library kiss_fft
			</description>
		</entry>
		<entry name ="Keywords">
			<description>
Fourier, transform, discrete.
			</description>
		</entry>
	</misc>

</c74object>