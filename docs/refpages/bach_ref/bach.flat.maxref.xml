<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="bach.flat" module="bach">

	<digest>
		Decrease the depth of an llll
	</digest>

	<description>
		Decreases the depth of an llll by eliminating couple of parentheses.
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">bachproject</metadata>
		<metadata name="tag">bach</metadata>
		<metadata name="tag">bach objects</metadata>
		<metadata name="tag">bach llll</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				llll to flatten
			</digest>
			<description>
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				Flattened llll
			</digest>
			<description>
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="levels" optional="1" type="">
			<digest>
				Levels
			</digest>
			<description>
				If only one argument is present, it is considered <m>maxlevels</m>.
				If two arguments are present, they are considered <m>minlevels</m> and <m>maxlevels</m>.
			</description>
		</objarg>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="bang">
			<arglist />
			<digest>
				Perform last operation
			</digest>
			<description>
				Reduce the depth of the most recently received llll
			</description>
		</method>
		<method name="llll">
			<arglist />
			<digest>
				Flatten the llll
			</digest>
			<description>
				The depth of the llll is reduced by removing couple of parentheses,
				according to the <m>minlevel</m> and <m>maxlevel</m> attributes.
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="maxlevel" get="1" set="1" type="int" size="1">
			<digest>
				Maximum Level
			</digest>
			<description>
				The <m>maxlevel</m> attribute indicates the deepest level of parentheses to remove.
				Every parenthesis deeper than maxlevel is left alone.
				For example, <m>maxlevel 1</m> means "the last level of parentheses to remove is the outermost",
				<m>maxlevel 2</m> means "the last level to remove is the second-outermost".
				If set to a negative number, the levels are counted from the innermost level:
				<m>maxlevel -1</m> means "the last level of parentheses to remove is the innermost",
				that is "remove all the parentheses, down to the deepest";
				<m>maxlevel -2</m> means "the last level to remove is the second-innermost",
				that is, "always leave the deepest level of parentheses for every branch of the llll".
				Defaults to -1.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Maximum Level" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="minlevel" get="1" set="1" type="int" size="1">
			<digest>
				Minimum Level
			</digest>
			<description>
				The <m>minlevel</m> attribute indicates the less deep level of parentheses to remove.
				Every parenthesis less deep than maxlevel is left alone.
				For example, <m>minlevel 1</m> means "start removing the parentheses from the first level",
				that is "remove all the parentheses, from the outermost".
				<m>minlevel 2</m> means "leave the first level of parentheses alone, and start removing from the second outermost".
				If set to a negative number, the levels are counted from the innermost level:
				<m>minlevel -1</m> means "the first level of parentheses to remove is the innermost",
				that is "remove only the innermost level";
				<m>maxlevel -2</m> means "remove the two innermost levels",
				Defaults to 1.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Minimum Level" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="out" get="1" set="1" type="symbol" size="1">
			<digest>
				Outlet Types
			</digest>
			<description>
				The <m>out</m> attribute is a sequence of characters identifying the outlet types (one character for each llll outlet). Characters can be one of the following: <br />
				<m>n</m> (default): 'native' output: faster and more precise between bach objects, but unreadable by standard Max objects (an "bach.llll" message appears instead). <br />
				<m>t</m>: 'text' output: slower and limited in size, but readable by standard Max objects. A plain llll in text format is a generic Max message.
				To keep the representation invertible (i.e., to allow a bach object receiving a text-format llll to interpret it exactly as if it was native format,
				except for the size limitation), some specific kinds of symbols are preceded by a backtick: namely, symbols containing parens, or containing textual
				representations of numbers or pitches, or beginning with a backtick, plus the symbols "null" and "nil" (distinct from the reserved words
				"null" and "nil" representing the empty list and the empty sublist) are preceded by a backtick. Moreover, the symbols "int", "float" or "list"
				are preceded by a backtick only if they are the first element of an llll, to distinguish them from the corresponding reserved messages of Max. <br />
				<m>m</m>: 'max' output: mostly equivalent to the "t" specifier, but no symbol is backticket except "int", "float" and "list" at the beginning of an llll.
				It is important to notice that, differently from text-format lllls proper, Max-format lllls might not be invertible even if they do not reach the size
				limit for Max message. This means that a bach object receiving a Max-format llll output from another bach object might interpret it differently
				from the original, or in some cases might even reject it. <br />
				<m>x</m>: disabled output (nothing is output) <br />
				<m>p</m>: 'portal' output: only used by bach.portal to intercept the @out attribute specified while creating the abstraction (see bach.portal). <br />
				The native output is recommended, unless communication with standard Max messages is needed.
				Disabling unused outputs can be useful if extreme optimization of the patch is needed.
				<br /> <br />
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outlet Types" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="bach.wrap" />
		<seealso name="bach.trans" />
		<seealso name="bach.depth" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (llll)">
			<description>
				llll to flatten.
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1 (llll)">
			<description>
				Flattened llll.
			</description>
		</entry>
	</misc>

</c74object>