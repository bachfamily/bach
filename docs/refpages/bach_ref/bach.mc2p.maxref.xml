<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="bach.mc2p" module="bach">

	<digest>
		MIDIcents to pitch conversion
	</digest>

	<description>
		Converts an llll containing cents into a corresponding llll containing pitches.
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">bachproject</metadata>
		<metadata name="tag">bach</metadata>
		<metadata name="tag">bach objects</metadata>
		<metadata name="tag">bach notation</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				The llll containing the MIDIcents
			</digest>
			<description>
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				The llll containing the pitches
			</digest>
			<description>
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="bang">
			<arglist />
			<digest>
				Perform the conversion.
			</digest>
			<description>
				Perform the conversion on the most recently received input data.
			</description>
		</method>
		<method name="llll">
			<arglist />
			<digest>
				Convert MIDIcents to pitches
			</digest>
			<description>
				The function outputs an llll formatted as the incoming one, but containing the note name
				instead of each midicents value.
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="accidentalspreferences" get="1" set="1" type="int" size="1">
			<digest>
				Accidental Preferences
			</digest>
			<description>
				Sets how non-natural notes should be represented: <br />
				- Auto: let bach choose a default representation. <br />
				- Sharps: always choose sharp accidentals (more precisely, in general: always
				choose a representation such that the displayed diatonic pitch is below the actual note). <br />
				- Flats: always choose flat accidentals (more precisely, in general: always
				choose a representation such that the displayed diatonic pitch is above the actual note). <br />
				- Custom: use a custom enharmonic table, defined via the <m>enharmonictable</m> attribute.
				<br /> <br />
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Accidental Preferences" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
			</attributelist>
		</attribute>
		<attribute name="octave" get="1" set="1" type="int" size="1">
			<digest>
				Append Octave Number
			</digest>
			<description>
				Toggles the ability to append the octave number to the note name. Defaults to 1 (true).
				If this is set to 0, then the output is not a pitch, but a symbol containing the pitch string without the octave.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Append Octave Number" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff" />
			</attributelist>
		</attribute>
		<attribute name="out" get="1" set="1" type="symbol" size="1">
			<digest>
				Outlet Types
			</digest>
			<description>
				The <m>out</m> attribute is a sequence of characters identifying the outlet types (one character for each llll outlet). Characters can be one of the following: <br />
				<m>n</m> (default): 'native' output: faster and more precise between bach objects, but unreadable by standard Max objects (an "bach.llll" message appears instead). <br />
				<m>t</m>: 'text' output: slower and limited in size, but readable by standard Max objects. A plain llll in text format is a generic Max message.
				To keep the representation invertible (i.e., to allow a bach object receiving a text-format llll to interpret it exactly as if it was native format,
				except for the size limitation), some specific kinds of symbols are preceded by a backtick: namely, symbols containing parens, or containing textual
				representations of numbers or pitches, or beginning with a backtick, plus the symbols "null" and "nil" (distinct from the reserved words
				"null" and "nil" representing the empty list and the empty sublist) are preceded by a backtick. Moreover, the symbols "int", "float" or "list"
				are preceded by a backtick only if they are the first element of an llll, to distinguish them from the corresponding reserved messages of Max. <br />
				<m>m</m>: 'max' output: mostly equivalent to the "t" specifier, but no symbol is backticket except "int", "float" and "list" at the beginning of an llll.
				It is important to notice that, differently from text-format lllls proper, Max-format lllls might not be invertible even if they do not reach the size
				limit for Max message. This means that a bach object receiving a Max-format llll output from another bach object might interpret it differently
				from the original, or in some cases might even reject it. <br />
				<m>x</m>: disabled output (nothing is output) <br />
				<m>p</m>: 'portal' output: only used by bach.portal to intercept the @out attribute specified while creating the abstraction (see bach.portal). <br />
				The native output is recommended, unless communication with standard Max messages is needed.
				Disabling unused outputs can be useful if extreme optimization of the patch is needed.
				<br /> <br />
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outlet Types" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="tonedivision" get="1" set="1" type="int" size="1">
			<digest>
				Microtonal Division
			</digest>
			<description>
				In the bach environment, the tone division defines the microtonal accuracy of the symbolic representation,
				by representing the number of steps in which each tone is divided.
				For the standard semitonal representation (where just sharps and flats suffice), one can stick with
				<m>tonedivision</m> being 2, meaning: the tone is divided into two semitones.
				By increasing this value, the microtonal grid gets more dense: for instance, 4 is the quartertonal grid
				(where each tone is divided in 4 quartertones); 8 is the eight-tonal grid, and so on.
				<br /> <br />
				Set <m>tonedivision</m> to 0 (default) in order to perform the conversion at maximum precision.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Microtonal Division" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--DISCUSSION-->
	<discussion>
		The pitches are inferred automatically from the cents, by snapping it to the
		nearest element of the current microtonal grid (see the <m>tonedivision</m> attribute),
		depending on the values of the other attributes.
	</discussion>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="bach.p2mc" />
		<seealso name="bach.f2mc" />
		<seealso name="bach.mc2f" />
		<seealso name="bach.approx" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (llll)">
			<description>
				The llll containing the MIDIcents.
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1 (llll)">
			<description>
				The llll containing the pitches.
			</description>
		</entry>
	</misc>

	<misc name = "Discussion">
		<entry name ="More details">
			<description>
		The pitches are inferred automatically from the cents, by snapping it to the
		nearest element of the current microtonal grid (see the <m>tonedivision</m> attribute),
		depending on the values of the other attributes.
			</description>
		</entry>
		<entry name ="Keywords">
			<description>
convert, midicent, cent, note, name, bach pitches.
			</description>
		</entry>
	</misc>

</c74object>