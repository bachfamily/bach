<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="bach.eig" module="bach">

	<digest>
		Find eigenvalues and eigenvectors
	</digest>

	<description>
		Finds the eigenvalues and eigenvectors of the incoming matrix, via the power iteration method.
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">bachproject</metadata>
		<metadata name="tag">bach</metadata>
		<metadata name="tag">bach objects</metadata>
		<metadata name="tag">bach matrix calculus</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				The eigenvalues of the matrix
			</digest>
			<description>
			</description>
		</inlet>
		<inlet id="1" type="INLET_TYPE">
			<digest>
				The eigenvectors relative to the eigenvalues, listed by rows
			</digest>
			<description>
				The eigenvalues are listed by rows in the output matrix, and are normalized.
			</description>
		</inlet>
	</inletlist>

	<!--ARGUMENTS-->
	<objarglist>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="bang">
			<arglist />
			<digest>
				Perform the eigenvalues and eigenvectors search
			</digest>
			<description>
				Perform the eigenvalues and eigenvectors search on the most recently received input data.
			</description>
		</method>
		<method name="llll">
			<arglist />
			<digest>
				Find eigenvalues and eigenvectors of incoming matrix
			</digest>
			<description>
				The object outputs the eigenvalues and the eigenvectors of the incoming matrix. <br />
				In the bach environment, a matrix is just a llll having depth two, whose first-level sublllls are the rows of the matrix.
				For instance the matrix <b>[1 0 0] [0 1 0] [0 0 1]</b> is the 3 by 3 identity matrix. A "good" matrix is supposed to be well formed,
				i.e. all its rows must have the same length. A matrix is square if the length of the rows (which is the number of columns) is the same
				as the number of rows.
				<br /> <br />
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="maxcoeffrandvect" get="1" set="1" type="int" size="1">
			<digest>
				Max Coefficient for Initial Random Vector
			</digest>
			<description>
				Maximum coefficient of the power method.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Max Coefficient for Initial Random Vector" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="numiter" get="1" set="1" type="int" size="1">
			<digest>
				Number of Iterations
			</digest>
			<description>
				Number of iterations in the power method algorithm.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Number of Iterations" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="out" get="1" set="1" type="symbol" size="1">
			<digest>
				Outlet Types
			</digest>
			<description>
				The <m>out</m> attribute is a sequence of characters identifying the outlet types (one character for each llll outlet). Characters can be one of the following: <br />
				<m>n</m> (default): 'native' output: faster and more precise between bach objects, but unreadable by standard Max objects (an "bach.llll" message appears instead). <br />
				<m>t</m>: 'text' output: slower and limited in size, but readable by standard Max objects. A plain llll in text format is a generic Max message.
				To keep the representation invertible (i.e., to allow a bach object receiving a text-format llll to interpret it exactly as if it was native format,
				except for the size limitation), some specific kinds of symbols are preceded by a backtick: namely, symbols containing parens, or containing textual
				representations of numbers or pitches, or beginning with a backtick, plus the symbols "null" and "nil" (distinct from the reserved words
				"null" and "nil" representing the empty list and the empty sublist) are preceded by a backtick. Moreover, the symbols "int", "float" or "list"
				are preceded by a backtick only if they are the first element of an llll, to distinguish them from the corresponding reserved messages of Max. <br />
				<m>m</m>: 'max' output: mostly equivalent to the "t" specifier, but no symbol is backticket except "int", "float" and "list" at the beginning of an llll.
				It is important to notice that, differently from text-format lllls proper, Max-format lllls might not be invertible even if they do not reach the size
				limit for Max message. This means that a bach object receiving a Max-format llll output from another bach object might interpret it differently
				from the original, or in some cases might even reject it. <br />
				<m>x</m>: disabled output (nothing is output) <br />
				<m>p</m>: 'portal' output: only used by bach.portal to intercept the @out attribute specified while creating the abstraction (see bach.portal). <br />
				The native output is recommended, unless communication with standard Max messages is needed.
				Disabling unused outputs can be useful if extreme optimization of the patch is needed.
				<br /> <br />
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outlet Types" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--DISCUSSION-->
	<discussion>
		An overview of the power iteration method can be found for instance in
		http://www.cs.cornell.edu/~bindel/class/cs6210-f09/lec26.pdf
		The first eigenvalue found by this method is usually the dominant eigenvalue, and thus it will most likely
		be the most accurate one. For complex-valued eigenvalues, the convergence to the moudulo is not assured
		(and thus also the relative eigenvectors' accuracy). If a matrix is singular, N eigenvalues will
		be surely 0, N being is the dimension of the kernel (these zero-eigenvalues correspond to the
		kernel spanning eigenvectors). <br />
		In the bach environment, a matrix is just a llll having depth two, whose first-level sublllls are the rows of the matrix.
		For instance the matrix <b>[1 0 0] [0 1 0] [0 0 1]</b> is the 3 by 3 identity matrix. A "good" matrix is supposed to be well formed,
		i.e. all its rows must have the same length. A matrix is square if the length of the rows (which is the number of columns) is the same
		as the number of rows.
		<br /> <br />
	</discussion>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="bach.mtimes" />
		<seealso name="bach.extractbasis" />
		<seealso name="jitcellblock" />
		<seealso name="16-Into The Matrix" module="bach" type="tutorial" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (llll)">
			<description>
				The eigenvalues of the matrix.
			</description>
		</entry>
		<entry name ="Inlet 2 (llll)">
			<description>
				The eigenvectors relative to the eigenvalues, listed by rows.
				The eigenvalues are listed by rows in the output matrix, and are normalized.
			</description>
		</entry>
	</misc>

	<misc name = "Discussion">
		<entry name ="More details">
			<description>
		An overview of the power iteration method can be found for instance in
		http://www.cs.cornell.edu/~bindel/class/cs6210-f09/lec26.pdf
		The first eigenvalue found by this method is usually the dominant eigenvalue, and thus it will most likely
		be the most accurate one. For complex-valued eigenvalues, the convergence to the moudulo is not assured
		(and thus also the relative eigenvectors' accuracy). If a matrix is singular, N eigenvalues will
		be surely 0, N being is the dimension of the kernel (these zero-eigenvalues correspond to the
		kernel spanning eigenvectors). <br />
		In the bach environment, a matrix is just a llll having depth two, whose first-level sublllls are the rows of the matrix.
		For instance the matrix <b>[1 0 0] [0 1 0] [0 0 1]</b> is the 3 by 3 identity matrix. A "good" matrix is supposed to be well formed,
		i.e. all its rows must have the same length. A matrix is square if the length of the rows (which is the number of columns) is the same
		as the number of rows.
		<br /> <br />
			</description>
		</entry>
		<entry name ="Keywords">
			<description>
eigenvalue, eigenvector, find, power, iteration, matrix.
			</description>
		</entry>
	</misc>

</c74object>