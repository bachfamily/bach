<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="bach.reducefunction" module="bach" category="Math">

	<digest>
		Simplify breakpoint functions
	</digest>

	<description>
		Simplifies a breakpoint function by pruning negligible points.
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">bachproject</metadata>
		<metadata name="tag">bach</metadata>
		<metadata name="tag">bach objects</metadata>
		<metadata name="tag">bach math</metadata>
	</metadatalist>

	<!--ARGUMENTS-->
	<objarglist>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="llll">
			<arglist />
			<digest>
				Simplify incoming breakpoint function
			</digest>
			<description>
				A breakpoint function in the form
				<b>[<m>x</m> <m>y</m> <m>slope</m>] [<m>x</m> <m>y</m> <m>slope</m>]...</b>
				is expected and then simplified by pruning negligeable points.
				Result is output from the outlet in the same form.
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="algorithm" get="1" set="1" type="int" size="1">
			<digest>
				Algorithm
			</digest>
			<description>
				Sets the algorithm used to approximate the function. <br />
				- Clustering: Points are grouped in cluster, and mid-points are pruned.
				The <m>thresh</m> attribute in this case sets the maximum average distance of the points with respect to the line obtained
				with the pruned points, for clustering. The result keeps well isolated the different function regions. <br />
				- Greedy Clustering: Same as previous one, but the search is performed greedily left-to-right. Result is usually faster
				than previous case, but of a lower quality. <br />
				- Integral Approximation: The algorithm approximates the function by starting with the first and last point, and subsequently
				adding one by one some mid-points, until the integral distance (depending on the <m>p</m> value) is under the <m>thresh</m> threshold. <br />
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Algorithm" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
			</attributelist>
		</attribute>
		<attribute name="maxnumpoints" get="1" set="1" type="int" size="1">
			<digest>
				Maximum Number Of Output Points
			</digest>
			<description>
				(For Integral Approximation <m>algorithm</m> only.) Sets the maximum number of output points. Leave 0 to mean: no limit.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Maximum Number Of Output Points" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="out" get="1" set="1" type="symbol" size="1">
			<digest>
				Outlet Types
			</digest>
			<description>
				The <m>out</m> attribute is a sequence of characters identifying the outlet types (one character for each llll outlet). Characters can be one of the following: <br />
				<m>n</m> (default): 'native' output: faster and more precise between bach objects, but unreadable by standard Max objects (an "bach.llll" message appears instead). <br />
				<m>t</m>: 'text' output: slower and limited in size, but readable by standard Max objects. A plain llll in text format is a generic Max message.
				To keep the representation invertible (i.e., to allow a bach object receiving a text-format llll to interpret it exactly as if it was native format,
				except for the size limitation), some specific kinds of symbols are preceded by a backtick: namely, symbols containing parens, or containing textual
				representations of numbers or pitches, or beginning with a backtick, plus the symbols "null" and "nil" (distinct from the reserved words
				"null" and "nil" representing the empty list and the empty sublist) are preceded by a backtick. Moreover, the symbols "int", "float" or "list"
				are preceded by a backtick only if they are the first element of an llll, to distinguish them from the corresponding reserved messages of Max. <br />
				<m>m</m>: 'max' output: mostly equivalent to the "t" specifier, but no symbol is backticket except "int", "float" and "list" at the beginning of an llll.
				It is important to notice that, differently from text-format lllls proper, Max-format lllls might not be invertible even if they do not reach the size
				limit for Max message. This means that a bach object receiving a Max-format llll output from another bach object might interpret it differently
				from the original, or in some cases might even reject it. <br />
				<m>x</m>: disabled output (nothing is output) <br />
				<m>p</m>: 'portal' output: only used by bach.portal to intercept the @out attribute specified while creating the abstraction (see bach.portal). <br />
				The native output is recommended, unless communication with standard Max messages is needed.
				Disabling unused outputs can be useful if extreme optimization of the patch is needed.
				<br /> <br />
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outlet Types" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="p" get="1" set="1" type="atom" size="1">
			<digest>
				Norm p value
			</digest>
			<description>
				(For Integral Approximation <m>algorithm</m> only.)
				Sets the value of the index <m>p</m>, determining the type of norm. Such value can be an integer greater or equal than 1, or can be the
				symbol "inf", for the infinite norm. In general, the p-norm of a function is calculated by taking the <m>p</m>-th root of the integral of the
				absolute value of the function raised to the <m>p</m>-th power.
				The inf-norm, on the other hand, is the absolute value of the "sup" of the function (which coincides with the function maximum for breakpoint functions).
				<br /> <br />
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Norm p value" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="relative" get="1" set="1" type="int" size="1">
			<digest>
				Relative Threshold
			</digest>
			<description>
				Toggles the ability for the threshold defined by <m>thresh</m> to be a relative threshold (with respect to the function
				domain and range). By default it is on. For instance, for Clustering algorithms, setting <m>thresh</m> as 0.1 will mean that an error of 10% of the range is acceptable.
				For Integral algorithm, this also accounts for the domain: the given <m>thresh</m> is thus an integral threshold per domain unit and per range unit.
				For instance, if <m>thresh</m> is 0.9, domain spans 3 units and range spans 7 units, it means that an error of 0.9*3*7 is still acceptable.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Relative Threshold" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff" />
			</attributelist>
		</attribute>
		<attribute name="slope" get="1" set="1" type="int" size="1">
			<digest>
				Slope Handling
			</digest>
			<description>
				Toggles the ability to either ignore or approximate slopes.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Slope Handling" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
			</attributelist>
		</attribute>
		<attribute name="slopemapping" get="1" set="1" type="int" size="1">
			<digest>
				Slope Mapping
			</digest>
			<description>
				Sets the function to be used for slope mapping: either bach (default) or Max.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Slope Mapping" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
			</attributelist>
		</attribute>
		<attribute name="thresh" get="1" set="1" type="float" size="1">
			<digest>
				Distance Threshold
			</digest>
			<description>
				Sets the distance threshold for a simplified curve to be acceptable.
				For Clustering algorithms, this is the average distance of the points with respect to the segment created by pruning them (default: 0.025).
				For Integral algorithms, this is the integral distance between the function and the simplified one (also see <m>p</m>).
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Distance Threshold" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="bach.slot" />
		<seealso name="bach.roll" />
		<seealso name="bach.score" />
		<seealso name="bach.resample" />
	</seealsolist>

</c74object>