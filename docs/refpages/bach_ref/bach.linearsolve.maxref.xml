<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="bach.linearsolve" module="bach">

	<digest>
		Solve a linear system of equations
	</digest>

	<description>
		Solves a linear system of equations in the matrix form Ax = b, where A
		is the system matrix and b is the column vector. If the system is solvable and the solution
		is unique, the vector x is sent through the first outlet. In any case, an information
		about the solvability is sent through the second outlet.
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">bachproject</metadata>
		<metadata name="tag">bach</metadata>
		<metadata name="tag">bach objects</metadata>
		<metadata name="tag">bach matrix calculus</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				The matrix of the system
			</digest>
			<description>
			</description>
		</inlet>
		<inlet id="1" type="INLET_TYPE">
			<digest>
				The column vector
			</digest>
			<description>
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				The solution of the system
			</digest>
			<description>
			</description>
		</outlet>
		<outlet id="1" type="INLET_TYPE">
			<digest>
				Number of solutions of the system
			</digest>
			<description>
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="bang">
			<arglist />
			<digest>
				Solve the linear system
			</digest>
			<description>
				Solve the linear system based on the most recently received input matrix and vector.
			</description>
		</method>
		<method name="llll">
			<arglist />
			<digest>
				Function depends on inlet
			</digest>
			<description>
				In the first inlet, an llll sets the system matrix A and have bach.linearsolve solve the linear system. <br />
				In the second inlet, an llll sets the system vector b. <br />
				The llll in the second inlet is expected to be a vector (a plain llll); the llll in the first inlet is expected to be a matrix. <br />
				In the bach environment, a matrix is just a llll having depth two, whose first-level sublllls are the rows of the matrix.
				For instance the matrix <b>[1 0 0] [0 1 0] [0 0 1]</b> is the 3 by 3 identity matrix. A "good" matrix is supposed to be well formed,
				i.e. all its rows must have the same length. A matrix is square if the length of the rows (which is the number of columns) is the same
				as the number of rows.
				<br /> <br />
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="out" get="1" set="1" type="symbol" size="1">
			<digest>
				Outlet Types
			</digest>
			<description>
				The <m>out</m> attribute is a sequence of characters identifying the outlet types (one character for each llll outlet). Characters can be one of the following: <br />
				<m>n</m> (default): 'native' output: faster and more precise between bach objects, but unreadable by standard Max objects (an "bach.llll" message appears instead). <br />
				<m>t</m>: 'text' output: slower and limited in size, but readable by standard Max objects. A plain llll in text format is a generic Max message.
				To keep the representation invertible (i.e., to allow a bach object receiving a text-format llll to interpret it exactly as if it was native format,
				except for the size limitation), some specific kinds of symbols are preceded by a backtick: namely, symbols containing parens, or containing textual
				representations of numbers or pitches, or beginning with a backtick, plus the symbols "null" and "nil" (distinct from the reserved words
				"null" and "nil" representing the empty list and the empty sublist) are preceded by a backtick. Moreover, the symbols "int", "float" or "list"
				are preceded by a backtick only if they are the first element of an llll, to distinguish them from the corresponding reserved messages of Max. <br />
				<m>m</m>: 'max' output: mostly equivalent to the "t" specifier, but no symbol is backticket except "int", "float" and "list" at the beginning of an llll.
				It is important to notice that, differently from text-format lllls proper, Max-format lllls might not be invertible even if they do not reach the size
				limit for Max message. This means that a bach object receiving a Max-format llll output from another bach object might interpret it differently
				from the original, or in some cases might even reject it. <br />
				<m>x</m>: disabled output (nothing is output) <br />
				<m>p</m>: 'portal' output: only used by bach.portal to intercept the @out attribute specified while creating the abstraction (see bach.portal). <br />
				The native output is recommended, unless communication with standard Max messages is needed.
				Disabling unused outputs can be useful if extreme optimization of the patch is needed.
				<br /> <br />
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outlet Types" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--DISCUSSION-->
	<discussion>
		The linear system has to be in matrix form Ax = b. <o>bach.linearsolve</o> solves such system by performing
		a double Gaussian elimination on the juxtaposed matrix [A|b], as <o>bach.gausselim</o> can do.
		If there is no solution, this is reported from right outlet; if there are infinite solutions
		this is also reported from right outlet (and no solution is output). <br />
		In the bach environment, a matrix is just a llll having depth two, whose first-level sublllls are the rows of the matrix.
		For instance the matrix <b>[1 0 0] [0 1 0] [0 0 1]</b> is the 3 by 3 identity matrix. A "good" matrix is supposed to be well formed,
		i.e. all its rows must have the same length. A matrix is square if the length of the rows (which is the number of columns) is the same
		as the number of rows.
		<br /> <br />
	</discussion>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="bach.gausselim" />
		<seealso name="bach.mtimes" />
		<seealso name="bach.eig" />
		<seealso name="bach.det" />
		<seealso name="bach.rank" />
		<seealso name="16-Into The Matrix" module="bach" type="tutorial" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (llll)">
			<description>
				The matrix of the system.
			</description>
		</entry>
		<entry name ="Inlet 2 (llll)">
			<description>
				The column vector.
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1 (llll)">
			<description>
				The solution of the system.
			</description>
		</entry>
		<entry name ="Outlet 2 (int/symbol)">
			<description>
				Number of solutions of the system.
			</description>
		</entry>
	</misc>

	<misc name = "Discussion">
		<entry name ="More details">
			<description>
		The linear system has to be in matrix form Ax = b. <o>bach.linearsolve</o> solves such system by performing
		a double Gaussian elimination on the juxtaposed matrix [A|b], as <o>bach.gausselim</o> can do.
		If there is no solution, this is reported from right outlet; if there are infinite solutions
		this is also reported from right outlet (and no solution is output). <br />
		In the bach environment, a matrix is just a llll having depth two, whose first-level sublllls are the rows of the matrix.
		For instance the matrix <b>[1 0 0] [0 1 0] [0 0 1]</b> is the 3 by 3 identity matrix. A "good" matrix is supposed to be well formed,
		i.e. all its rows must have the same length. A matrix is square if the length of the rows (which is the number of columns) is the same
		as the number of rows.
		<br /> <br />
			</description>
		</entry>
		<entry name ="Keywords">
			<description>
solve, linear system, equation, matrix, column, vector.
			</description>
		</entry>
	</misc>

</c74object>