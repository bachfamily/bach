<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="bach.contains" module="bach">

	<digest>
		Contents of an llll
	</digest>

	<description>
		Returns the types of the data contained in an llll, optionally within a specified depth range.
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">bachproject</metadata>
		<metadata name="tag">bach</metadata>
		<metadata name="tag">bach objects</metadata>
		<metadata name="tag">bach llll</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				The llll whose contained data types will be reported
			</digest>
			<description>
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				The bitfield representation of the contained data types
			</digest>
			<description>
				The bitfield representation is a bitwise or of the following values:
				<b>1</b> = null, <b>2</b> = integer, <b>4</b> = rational, <b>8</b> = float, <b>16</b> = symbol, <b>32</b> = llll, <b>256</b> = pitch.
				Only values corresponding to data types that are contained in the input llll concour to the representation.
			</description>
		</outlet>
		<outlet id="1" type="INLET_TYPE">
			<digest>
				The symbolic representation of the contained data types
			</digest>
			<description>
				The symbolic representation is a message composed by a combination of the following symbols:
				<b>i</b> = integer, <b>r</b> = rational, <b>f</b> = float, <b>s</b> = symbol, <b>l</b> = llll, <b>p</b> = pitch, <b>n</b> = null.
				Only symbols corresponding to data types that are contained in the input llll are present in the output message.
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="depth" optional="1" type="int">
			<digest>
				Depth
			</digest>
			<description>
				If only one argument is present, it is considered maxdepth.
				If two arguments are present, the first is considered mindepth, the second maxdepth.
			</description>
		</objarg>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="bang">
			<arglist />
			<digest>
				Return the data types
			</digest>
			<description>
				Returns the data types of the most recently received llll.
			</description>
		</method>
		<method name="llll">
			<arglist />
			<digest>
				Return the data types in the llll
			</digest>
			<description>
				Returns the types of the data contained in an llll, optionally within a specified depth range.
				The data types are returned as a bitfield from the first outlet and as symbols from the second outlet.
				The bitfield representation is a bitwise or of the following values:
				<b>1</b> = null, <b>2</b> = integer, <b>4</b> = rational, <b>8</b> = float, <b>16</b> = symbol, <b>32</b> = llll.
				Only values corresponding to data types that are contained in the input llll concour to the representation.
				The symbolic representation is an llll composed by a combination of the following symbols:
				<b>i</b> = integer, <b>r</b> = rational, <b>f</b> = float, <b>s</b> = symbol, <b>l</b> = llll, <b>null</b>.
				Only symbols corresponding to data types that are contained in the input llll are present in the output llll.
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="maxdepth" get="1" set="1" type="int" size="1">
			<digest>
				Maximum Depth
			</digest>
			<description>
				<m>maxdepth</m> sets the maximum depth level at which the evaluation of the contents of the llll must be performed.
				If negative, the depth level is counted from the innermost level of each branch of the tree.
				A value of 0 is treated as a special case where the whole input llll is evaluated as a whole,
				thus always returning an llll value.
				This can be useful in special situations where a series of iterations are triggered at different maximum depths,
				in order to emulate recursive behaviors.
				Defaults to -1, i.e. there is no limitation (stop at the innermost level).
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Maximum Depth" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="mindepth" get="1" set="1" type="int" size="1">
			<digest>
				Minimum Depth
			</digest>
			<description>
				<m>mindepth</m> sets the minimum depth level at which the operation must be performed.
				If negative, the depth level is counted from the innermost level of each branch of the tree.
				A value of 0 is not accepted.
				Defaults to 1, i.e. there is no limitation.
				<br /> <br />
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Minimum Depth" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="bach.is" />
		<seealso name="bach.bitdecode" />
		<seealso name="bach.filter" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (llll)">
			<description>
				The llll whose contained data types will be reported.
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1 (int)">
			<description>
				The bitfield representation of the contained data types.
				The bitfield representation is a bitwise or of the following values:
				<b>1</b> = null, <b>2</b> = integer, <b>4</b> = rational, <b>8</b> = float, <b>16</b> = symbol, <b>32</b> = llll, <b>256</b> = pitch.
				Only values corresponding to data types that are contained in the input llll concour to the representation.
			</description>
		</entry>
		<entry name ="Outlet 2 (anything)">
			<description>
				The symbolic representation of the contained data types.
				The symbolic representation is a message composed by a combination of the following symbols:
				<b>i</b> = integer, <b>r</b> = rational, <b>f</b> = float, <b>s</b> = symbol, <b>l</b> = llll, <b>p</b> = pitch, <b>n</b> = null.
				Only symbols corresponding to data types that are contained in the input llll are present in the output message.
			</description>
		</entry>
	</misc>

</c74object>