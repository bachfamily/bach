<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="bach.recurser" module="bach" category="Math">

	<digest>
		Series from recurrence relations
	</digest>

	<description>
		Compute series starting from initial values and a recurrence relation
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">bachproject</metadata>
		<metadata name="tag">bach</metadata>
		<metadata name="tag">bach objects</metadata>
		<metadata name="tag">bach math</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				Initial values for recurrence
			</digest>
			<description>
			</description>
		</inlet>
		<inlet id="1" type="INLET_TYPE">
			<digest>
				Ending value for recurrence
			</digest>
			<description>
			</description>
		</inlet>
		<inlet id="2" type="INLET_TYPE">
			<digest>
				Recurrence relation
			</digest>
			<description>
				The recurrence relation must be defined as in <o>bach.expr</o> argument syntax.
			</description>
		</inlet>
		<inlet id="3" type="INLET_TYPE">
			<digest>
				Maximum number of items
			</digest>
			<description>
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				Series from recurrence relation
			</digest>
			<description>
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="wrapped_initial_values" optional="1" type="llll">
			<digest>
				Initial values for recurrence
			</digest>
			<description>
				The initial values for the recurrence, wrapped in a level of parenthesis. Default is <b>[0]</b>
			</description>
		</objarg>
		<objarg name="end" optional="1" type="number/none">
			<digest>
				Ending value
			</digest>
			<description>
				The ending value for the series, which can also be the <m>none</m> symbol (see <m>llll</m> message).
				Default is <m>none</m>.
			</description>
		</objarg>
		<objarg name="recurrence" optional="1" type="symbol">
			<digest>
				Recurrence relation
			</digest>
			<description>
				The recurrence relation as a single symbol (use double quotes if needed). Default is <b>0</b>.
			</description>
		</objarg>
		<objarg name="max_items" optional="1" type="int/none">
			<digest>
				Maximum number of items
			</digest>
			<description>
				The maximum number of items in the output llll, which can also be the <m>none</m> symbol (see <m>llll</m> message).
				Default is <m>1000</m>.
			</description>
		</objarg>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="bang">
			<arglist />
			<digest>
				Output the series
			</digest>
			<description>
				A bang outputs the series according to the most recently received parameters.
			</description>
		</method>
		<method name="llll">
			<arglist />
			<digest>
				Set initial values
			</digest>
			<description>
				In first inlet: sets the starting values for the the recurrence, and triggers the output.
				In second inlet: sets the ending value for the recurrence.<br />
				In third inlet: sets the recurrence relation.<br />
				In fourth inlet: sets the maximum number of items.<br />
			</description>
		</method>
		<method name="number">
			<arglist />
			<digest>
				Set start, end, step or maximum number of items
			</digest>
			<description>
				In first inlet: sets the starting value for the the recurrence (if a single number, otherwise see <m>llll</m>), and triggers the output.
				In second inlet: sets the ending value for the recurrence.<br />
				In third inlet: sets the recurrence relation.<br />
				In fourth inlet: sets the maximum number of items.<br />
				Values set to <m>none</m> are calculated according to the other values if possible.
				If all the parameters are set, the stronger requirement between ending and maximum number of items is respected.
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="out" get="1" set="1" type="symbol" size="1">
			<digest>
				Outlet Types
			</digest>
			<description>
				The <m>out</m> attribute is a sequence of characters identifying the outlet types (one character for each llll outlet). Characters can be one of the following: <br />
				<m>n</m> (default): 'native' output: faster and more precise between bach objects, but unreadable by standard Max objects (an "bach.llll" message appears instead). <br />
				<m>t</m>: 'text' output: slower and limited in size, but readable by standard Max objects. A plain llll in text format is a generic Max message.
				To keep the representation invertible (i.e., to allow a bach object receiving a text-format llll to interpret it exactly as if it was native format,
				except for the size limitation), some specific kinds of symbols are preceded by a backtick: namely, symbols containing parens, or containing textual
				representations of numbers or pitches, or beginning with a backtick, plus the symbols "null" and "nil" (distinct from the reserved words
				"null" and "nil" representing the empty list and the empty sublist) are preceded by a backtick. Moreover, the symbols "int", "float" or "list"
				are preceded by a backtick only if they are the first element of an llll, to distinguish them from the corresponding reserved messages of Max. <br />
				<m>m</m>: 'max' output: mostly equivalent to the "t" specifier, but no symbol is backticket except "int", "float" and "list" at the beginning of an llll.
				It is important to notice that, differently from text-format lllls proper, Max-format lllls might not be invertible even if they do not reach the size
				limit for Max message. This means that a bach object receiving a Max-format llll output from another bach object might interpret it differently
				from the original, or in some cases might even reject it. <br />
				<m>x</m>: disabled output (nothing is output) <br />
				<m>p</m>: 'portal' output: only used by bach.portal to intercept the @out attribute specified while creating the abstraction (see bach.portal). <br />
				The native output is recommended, unless communication with standard Max messages is needed.
				Disabling unused outputs can be useful if extreme optimization of the patch is needed.
				<br /> <br />
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outlet Types" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="bach.primeser" />
		<seealso name="bach.geomser" />
		<seealso name="bach.arithmser" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (llll)">
			<description>
				Initial values for recurrence.
			</description>
		</entry>
		<entry name ="Inlet 2 (number/pitch/none)">
			<description>
				Ending value for recurrence.
			</description>
		</entry>
		<entry name ="Inlet 3 (symbol/llll)">
			<description>
				Recurrence relation.
				The recurrence relation must be defined as in <o>bach.expr</o> argument syntax.
			</description>
		</entry>
		<entry name ="Inlet 4 (int/none)">
			<description>
				Maximum number of items.
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1 (llll)">
			<description>
				Series from recurrence relation.
			</description>
		</entry>
	</misc>

</c74object>