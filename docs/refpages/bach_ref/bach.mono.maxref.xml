<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="bach.mono" module="bach" kind="patcher">

	<digest>
		Make <o>bach.roll</o> monophonic
	</digest>

	<description>
		Turns a generic <o>bach.roll</o> (possibly containing overlapping notes)
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">bachproject</metadata>
		<metadata name="tag">bach</metadata>
		<metadata name="tag">bach abstractions</metadata>
		<metadata name="tag">bach notation</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				The llll containing the gathered syntax of the original <o>bach.roll</o>
			</digest>
			<description>
			</description>
		</inlet>
		<inlet id="1" type="INLET_TYPE">
			<digest>
				Voices to be made monophonic (list of 0's and 1's)
			</digest>
			<description>
				This optional lists sets the voices to be made monophonic
				(see <m>llll</m> method).
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				The llll containing the gathered syntax of the monophonic <o>bach.roll</o>
			</digest>
			<description>
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="bang">
			<arglist />
			<digest>
				Output result
			</digest>
			<description>
				Performs the operation on the most recently received input lllls.
			</description>
		</method>
		<method name="llll">
			<arglist />
			<digest>
				Function depends on inlet
			</digest>
			<description>
				An llll in the first inlet is considered as the
				gathered syntax of the <o>bach.roll</o> to be made monophonic,
				which is usually obtained via <o>bach.roll</o>'s <m>dump</m> message
				(refer to it for more explainations). Such <o>bach.roll</o> is made
				monophonic, and the gathered syntax of the monophonic <o>bach.roll</o> is
				output from the outlet (ready to be connected with the left inlet
				of a <o>bach.roll</o>). <br />
				An llll in the second inlet is considered to be a list of 0's and 1's, one
				element for each voice, with 0 meaning: voice must not be made monophonic, and
				1 meaning: voice must be made monophonic. If no such list is provided,
				all voices are made monophonic (default). If less integers than the number
				of voices are given, the last one is padded.
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="out" get="1" set="1" type="symbol" size="1">
			<digest>
				Outlet Types
			</digest>
			<description>
				The <m>out</m> attribute is a sequence of characters identifying the outlet types (one character for each llll outlet). Characters can be one of the following: <br />
				<m>n</m> (default): 'native' output: faster and more precise between bach objects, but unreadable by standard Max objects (an "bach.llll" message appears instead). <br />
				<m>t</m>: 'text' output: slower and limited in size, but readable by standard Max objects. A plain llll in text format is a generic Max message.
				To keep the representation invertible (i.e., to allow a bach object receiving a text-format llll to interpret it exactly as if it was native format,
				except for the size limitation), some specific kinds of symbols are preceded by a backtick: namely, symbols containing parens, or containing textual
				representations of numbers or pitches, or beginning with a backtick, plus the symbols "null" and "nil" (distinct from the reserved words
				"null" and "nil" representing the empty list and the empty sublist) are preceded by a backtick. Moreover, the symbols "int", "float" or "list"
				are preceded by a backtick only if they are the first element of an llll, to distinguish them from the corresponding reserved messages of Max. <br />
				<m>m</m>: 'max' output: mostly equivalent to the "t" specifier, but no symbol is backticket except "int", "float" and "list" at the beginning of an llll.
				It is important to notice that, differently from text-format lllls proper, Max-format lllls might not be invertible even if they do not reach the size
				limit for Max message. This means that a bach object receiving a Max-format llll output from another bach object might interpret it differently
				from the original, or in some cases might even reject it. <br />
				<m>x</m>: disabled output (nothing is output) <br />
				<m>p</m>: 'portal' output: only used by bach.portal to intercept the @out attribute specified while creating the abstraction (see bach.portal). <br />
				The native output is recommended, unless communication with standard Max messages is needed.
				Disabling unused outputs can be useful if extreme optimization of the patch is needed.
				<br /> <br />
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outlet Types" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="resume" get="1" set="1" type="int" size="1">
			<digest>
				Resume Notes
			</digest>
			<description>
				Toggles the ability to resume notes which had been trimmed, when possible.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Resume Notes" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--DISCUSSION-->
	<discussion>
		<o>bach.mono</o> might be useful, for instance,
	</discussion>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="bach.roll" />
		<seealso name="bach.quantize" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (llll)">
			<description>
				The llll containing the gathered syntax of the original <o>bach.roll</o>.
			</description>
		</entry>
		<entry name ="Inlet 2 (llll)">
			<description>
				Voices to be made monophonic (list of 0's and 1's).
				This optional lists sets the voices to be made monophonic
				(see <m>llll</m> method).
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1 (llll)">
			<description>
				The llll containing the gathered syntax of the monophonic <o>bach.roll</o>.
			</description>
		</entry>
	</misc>

	<misc name = "Discussion">
		<entry name ="More details">
			<description>
		<o>bach.mono</o> might be useful, for instance,
			</description>
		</entry>
		<entry name ="Keywords">
			<description>
monophonic, trim, note, proportional, legato.
			</description>
		</entry>
	</misc>

</c74object>