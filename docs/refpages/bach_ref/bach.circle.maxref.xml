<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="bach.circle" module="bach">

	<digest>
		Clock diagram
	</digest>

	<description>
		The purpose of <o>bach.circle</o> is to act as a simple clock diagram,
		where each point can represent any abstract concept as pitch-classes
		or rhythmic positions on a looped grid.
		Each point may have a velocity also. Some of the points can be selected, thus representing
		for instance pitch-class sets ("chords" or "scales"...) or rhythmic patterns. <br /> <br />
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">bachproject</metadata>
		<metadata name="tag">bach</metadata>
		<metadata name="tag">bach objects</metadata>
		<metadata name="tag">bach set theory</metadata>
		<metadata name="tag">bach interface</metadata>
		<metadata name="tag">U/I</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				Points, or a 2-depth list of interlaced Points and Velocities
			</digest>
			<description>
			</description>
		</inlet>
		<inlet id="1" type="INLET_TYPE">
			<digest>
				Velocities
			</digest>
			<description>
			</description>
		</inlet>
		<inlet id="2" type="INLET_TYPE">
			<digest>
				Modulo
			</digest>
			<description>
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				Points, as a plain list of point indices
			</digest>
			<description>
			</description>
		</outlet>
		<outlet id="1" type="INLET_TYPE">
			<digest>
				Velocities, as a plain list
			</digest>
			<description>
			</description>
		</outlet>
		<outlet id="2" type="INLET_TYPE">
			<digest>
				Modulo
			</digest>
			<description>
			</description>
		</outlet>
		<outlet id="3" type="INLET_TYPE">
			<digest>
				bang when changed via the interface
			</digest>
			<description>
				A bang is output whenever the user changes the diagram via mouse and keyboard
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="(keyboard)">
			<arglist />
			<digest>
				Modify points or dump
			</digest>
			<description>
				• <m>Cmd+T</m> (mac) or <m>Ctrl+T</m> (win): Transpose (rotate) 1 step clockwise <br />
				• <m>Cmd+R</m> (mac) or <m>Ctrl+R</m> (win): Transpose (rotate) 1 step counterclockwise <br />
				• <m>Cmd+C</m> (mac) or <m>Ctrl+C</m> (win): Take the complement <br />
				• <m>Cmd+I</m> (mac) or <m>Ctrl+I</m> (win): Invert with respect to vertical axis <br />
				• <m>Cmd+Shift+D</m> (mac) or <m>Ctrl+Shift+D</m> (win): Dump (output modulo, velocities and points)
			</description>
		</method>
		<method name="(mouse)">
			<arglist />
			<digest>
				Add/delete points, or change their velocities
			</digest>
			<description>
				• <m>click</m>: Add a point <br />
				• <m>Alt+click</m>: Output clicked point index, in the form <b>point <m>pt</m></b>, where <m>pt</m> is as usual the point index. <br />
				• <m>Cmd+click</m> (mac) or <m>Ctrl+click</m> (win): Delete a point <br />
				• <m>Ctrl+click+drag</m> (mac) or <m>Shift+Ctrl+click+drag</m> (win): Change the velocity of a point (dragging up or down) <br />
				• <m>Ctrl+Alt+click+drag</m> (mac) or <m>Shift+Ctrl+Alt+click+drag</m> (win): Change the modulo (dragging up or down)
			</description>
		</method>
		<method name="add">
			<arg name="points" optional="0" type="llll" />
			<digest>
				Add a point
			</digest>
			<description>
				Syntax: <b>add <m>&lt;llll: points&gt;</m> </b><br />
				Examples:<br />
				• <b>add 2 4 5</b>   <i>→ add some points</i><br />
				• <b>add [2 60] [4 100 [5 120]</b>   <i>→ add some points with their velocities</i><br />
				<br />
				Add a point to the diagram. The argument can be, as in the standard <m>llll</m> method,
				either a plain list (representing point indices) or an interlaced list <b>[<m>pt1</m> <m>vel1</m>] [<m>pt2</m> <m>vel2</m>]...</b>
				representing points and velocities
				<br />				See also:<m>delete</m><br />
			</description>
		</method>
		<method name="clear">
			<arglist />
			<digest>
				Clear the diagram
			</digest>
			<description>
				Clear all the points of the diagram
			</description>
		</method>
		<method name="complement">
			<arglist />
			<digest>
				Get the complement
			</digest>
			<description>
				Get the complement of the existing diagram, i.e. the one formed by all the point
				which were not in the original diagram. The velocities of such complemented points are
				assigned by default.
				<br />				See also:<m>invert</m>,<m>transpose</m><br />
			</description>
		</method>
		<method name="delete">
			<arg name="points" optional="0" type="llll" />
			<digest>
				Delete points
			</digest>
			<description>
				Syntax: <b>delete <m>&lt;llll: points&gt;</m> </b><br />
				Example: <b>delete 2 4 5</b>   <i>→ delete some points</i><br />
				<br />
				Delete some points from the diagram (from their indices).
			</description>
		</method>
		<method name="dump">
			<arglist />
			<digest>
				Output all data
			</digest>
			<description>
				Send: <br />
				- the modulo from the third outlet; <br />
				- all the velocities from the second outlet, as a plain list; <br />
				- all the points from the first outlet, as a plain list.
			</description>
		</method>
		<method name="int">
			<arglist />
			<digest>
				Set the modulo (in third inlet)
			</digest>
			<description>
				In the third inlet, an integer sets the modulo (number of points in the clock).
			</description>
		</method>
		<method name="invert">
			<arglist />
			<digest>
				Invert
			</digest>
			<description>
				Mirror ("invert") all the points with respect to the vertical axis
				drawn by the center and the upper point (0).
				<br />				See also:<m>transpose</m>,<m>complement</m><br />
			</description>
		</method>
		<method name="llll">
			<arglist />
			<digest>
				Set points and/or velocities (depending on inlet)
			</digest>
			<description>
				In first inlet: a plain list sets the points: each point is given as per its index, 0 being the upper one, and then clockwise.
				An interlaced such as [(<m>pt1</m> <m>vel1</m>) (<m>pt2</m> <m>vel2</m>)...] sets both points and velocities. <br />
				In second inlet: Sets the velocities for the points you'll send in the first inlet later.
			</description>
		</method>
		<method name="transpose">
			<arg name="amount" optional="0" type="int" />
			<digest>
				Transpose
			</digest>
			<description>
				Syntax: <b>transpose <m>&lt;int: amount&gt;</m> </b><br />
				Examples:<br />
				• <b>transpose 3</b>   <i>→ rotate of 3 steps clockwise</i><br />
				• <b>transpose -3</b>   <i>→ rotate of 1 steps counterclockwise</i><br />
				<br />
				Rotate ("transpose") all the points in the diagram of a given amout, given
				in steps: a positive amount will rotate clockwise, a negative one will rotate counterclockwise.
				<br />				See also:<m>invert</m>,<m>complement</m><br />
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="autoreduce" get="1" set="1" type="int" size="1">
			<digest>
				Automatically Delete Duplicates
			</digest>
			<description>
				Automatically delete duplicates of points (if two or more points with the
				same index, up to the modulo, were defined).
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Settings" />
				<attribute name="default" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Automatically Delete Duplicates" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff" />
			</attributelist>
		</attribute>
		<attribute name="bgcolor" get="1" set="1" type="rgba" size="1">
			<digest>
				Background Color
			</digest>
			<description>
				Diagram external background color
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Color" />
				<attribute name="default" get="1" set="1" type="rgba" size="1" value="1. 1. 1. 1." />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Background Color" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="rgba" />
			</attributelist>
		</attribute>
		<attribute name="bordercolor" get="1" set="1" type="rgba" size="1">
			<digest>
				Border Color
			</digest>
			<description>
				Color of the diagram border
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Color" />
				<attribute name="default" get="1" set="1" type="rgba" size="1" value="0.2 0.2 0.2 1." />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Border Color" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="rgba" />
			</attributelist>
		</attribute>
		<attribute name="circlebordercolor" get="1" set="1" type="rgba" size="1">
			<digest>
				Circle Border Color
			</digest>
			<description>
				Color of the diagram circle outline
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Color" />
				<attribute name="default" get="1" set="1" type="rgba" size="1" value="0.2 0.2 0.2 1." />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Circle Border Color" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="rgba" />
			</attributelist>
		</attribute>
		<attribute name="circleinnercolor" get="1" set="1" type="rgba" size="1">
			<digest>
				Circle Inner Color
			</digest>
			<description>
				Inner color of the diagram circle
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Color" />
				<attribute name="default" get="1" set="1" type="rgba" size="1" value="0.94 0.89 0.89 1." />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Circle Inner Color" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="rgba" />
			</attributelist>
		</attribute>
		<attribute name="circlelinewidth" get="1" set="1" type="float" size="1">
			<digest>
				Circle Line Width
			</digest>
			<description>
				Width of the line of the main circle in the diagram, in pixels
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Appearance" />
				<attribute name="default" get="1" set="1" type="float" size="1" value="1." />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Circle Line Width" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="inset" get="1" set="1" type="float" size="1">
			<digest>
				Inset
			</digest>
			<description>
				Inset of the clock diagram with respect to the border, in pixels
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Appearance" />
				<attribute name="default" get="1" set="1" type="float" size="1" value="7." />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Inset" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="linecolor" get="1" set="1" type="rgba" size="1">
			<digest>
				Line Color
			</digest>
			<description>
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Color" />
				<attribute name="default" get="1" set="1" type="rgba" size="1" value="0.8 0. 0. 0.6" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Line Color" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="rgba" />
			</attributelist>
		</attribute>
		<attribute name="linewidth" get="1" set="1" type="float" size="1">
			<digest>
				Line Width
			</digest>
			<description>
				Width of the line linking all selected points together, in pixels
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Appearance" />
				<attribute name="default" get="1" set="1" type="float" size="1" value="2." />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Line Width" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="modulo" get="1" set="1" type="int" size="1">
			<digest>
				Modulo
			</digest>
			<description>
				Modulo of the diagram (the number of steps in which the circle is divided)
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Value" />
				<attribute name="default" get="1" set="1" type="int" size="1" value="12" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Modulo" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="modulotextcolor" get="1" set="1" type="rgba" size="1">
			<digest>
				Modulo Text Color
			</digest>
			<description>
				Color of the modulo text.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Color" />
				<attribute name="default" get="1" set="1" type="rgba" size="1" value="0. 0. 0. 1." />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Modulo Text Color" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="rgba" />
			</attributelist>
		</attribute>
		<attribute name="names" get="1" set="1" type="atom_array" size="0">
			<digest>
				Point Names
			</digest>
			<description>
				Assign name to each point in the clock, instead of number. One can use
				this attribute to individually naming each point, e.g. by setting
				[names do do# re re# mi fa fa# sol sol# la sib si]
				and displaying latin notes instead of numbers.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Settings" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Point Names" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="numberstextcolor" get="1" set="1" type="rgba" size="1">
			<digest>
				Numbers Text Color
			</digest>
			<description>
				Color of the numbers text.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Color" />
				<attribute name="default" get="1" set="1" type="rgba" size="1" value="0. 0. 0. 1." />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Numbers Text Color" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="rgba" />
			</attributelist>
		</attribute>
		<attribute name="out" get="1" set="1" type="symbol" size="1">
			<digest>
				Outlet Types
			</digest>
			<description>
				The <m>out</m> attribute is a sequence of characters identifying the outlet types (one character for each llll outlet). Characters can be one of the following: <br />
				<m>n</m> (default): 'native' output: faster and more precise between bach objects, but unreadable by standard Max objects (an "bach.llll" message appears instead). <br />
				<m>t</m>: 'text' output: slower and limited in size, but readable by standard Max objects. A plain llll in text format is a generic Max message.
				To keep the representation invertible (i.e., to allow a bach object receiving a text-format llll to interpret it exactly as if it was native format,
				except for the size limitation), some specific kinds of symbols are preceded by a backtick: namely, symbols containing parens, or containing textual
				representations of numbers or pitches, or beginning with a backtick, plus the symbols "null" and "nil" (distinct from the reserved words
				"null" and "nil" representing the empty list and the empty sublist) are preceded by a backtick. Moreover, the symbols "int", "float" or "list"
				are preceded by a backtick only if they are the first element of an llll, to distinguish them from the corresponding reserved messages of Max. <br />
				<m>m</m>: 'max' output: mostly equivalent to the "t" specifier, but no symbol is backticket except "int", "float" and "list" at the beginning of an llll.
				It is important to notice that, differently from text-format lllls proper, Max-format lllls might not be invertible even if they do not reach the size
				limit for Max message. This means that a bach object receiving a Max-format llll output from another bach object might interpret it differently
				from the original, or in some cases might even reject it. <br />
				<m>x</m>: disabled output (nothing is output) <br />
				<m>p</m>: 'portal' output: only used by bach.portal to intercept the @out attribute specified while creating the abstraction (see bach.portal). <br />
				The native output is recommended, unless communication with standard Max messages is needed.
				Disabling unused outputs can be useful if extreme optimization of the patch is needed.
				<br /> <br />
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outlet Types" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="pointbordercolor" get="1" set="1" type="rgba" size="1">
			<digest>
				Point Border Color
			</digest>
			<description>
				Color of each point's outline
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Color" />
				<attribute name="default" get="1" set="1" type="rgba" size="1" value="0.6 0. 0. 1." />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Point Border Color" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="rgba" />
			</attributelist>
		</attribute>
		<attribute name="pointinnercolor" get="1" set="1" type="rgba" size="1">
			<digest>
				Point Inner Color
			</digest>
			<description>
				Color of the inner part of each point.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Color" />
				<attribute name="default" get="1" set="1" type="rgba" size="1" value="1. 1. 1. 1." />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Point Inner Color" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="rgba" />
			</attributelist>
		</attribute>
		<attribute name="pointlinewidth" get="1" set="1" type="float" size="1">
			<digest>
				Point Line Width
			</digest>
			<description>
				Width of the line of each point's circle, in pixels
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Appearance" />
				<attribute name="default" get="1" set="1" type="float" size="1" value="1." />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Point Line Width" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="pointradius" get="1" set="1" type="float" size="1">
			<digest>
				Point Radius
			</digest>
			<description>
				Radius of each point in pixels
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Appearance" />
				<attribute name="default" get="1" set="1" type="float" size="1" value="4." />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Point Radius" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="points" get="1" set="1" type="int_array" size="0">
			<digest>
				Points
			</digest>
			<description>
				List of the selected points in the diagram.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Value" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Points" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="selectedpointbordercolor" get="1" set="1" type="rgba" size="1">
			<digest>
				Selected Point Border Color
			</digest>
			<description>
				Color of the selected point's outline
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Color" />
				<attribute name="default" get="1" set="1" type="rgba" size="1" value="0.6 0. 0. 1." />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Selected Point Border Color" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="rgba" />
			</attributelist>
		</attribute>
		<attribute name="selectedpointinnercolor" get="1" set="1" type="rgba" size="1">
			<digest>
				Selected Point Inner Color
			</digest>
			<description>
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Color" />
				<attribute name="default" get="1" set="1" type="rgba" size="1" value="0.83 0.47 0. 1." />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Selected Point Inner Color" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="rgba" />
			</attributelist>
		</attribute>
		<attribute name="selectioncolor" get="1" set="1" type="" size="1">
			<digest>
				
			</digest>
			<description>
				Color of the selected items and polygonal line.
			</description>
			<attributelist>
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="linecolor" />
			</attributelist>
		</attribute>
		<attribute name="sendnamesthroughdump" get="1" set="1" type="int" size="1">
			<digest>
				Send Names Through Dump
			</digest>
			<description>
				If <m>names</m> are defined, this attribute tells whether those names must be
				sent through the first outlet instead of point indices.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Settings" />
				<attribute name="default" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Send Names Through Dump" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff" />
			</attributelist>
		</attribute>
		<attribute name="showfocus" get="1" set="1" type="int" size="1">
			<digest>
				Show Focus
			</digest>
			<description>
				Show that the object has the focus by increasing the width of the border.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Show" />
				<attribute name="default" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Show Focus" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff" />
			</attributelist>
		</attribute>
		<attribute name="showmodulo" get="1" set="1" type="int" size="1">
			<digest>
				Show Modulo
			</digest>
			<description>
				Show the modulo in the middle of the diagram
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Show" />
				<attribute name="default" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Show Modulo" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff" />
			</attributelist>
		</attribute>
		<attribute name="shownumbers" get="1" set="1" type="int" size="1">
			<digest>
				Show Numbers
			</digest>
			<description>
				Attribute deciding when the numbers in the diagram must be shown
				(or the names, in case the <m>names</m> attribute is defined <br />
				<m>Never</m>: never show any number <br />
				<m>Mouseover</m>: Only show numbers when the mouse is over them<br />
				<m>Selected</m>: Only show numbers when the corresponding point is selected<br />
				<m>Always</m>: Always show all the numbers
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Show" />
				<attribute name="default" get="1" set="1" type="int" size="1" value="0" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Show Numbers" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
			</attributelist>
		</attribute>
		<attribute name="showpolygon" get="1" set="1" type="int" size="1">
			<digest>
				Show Polygon
			</digest>
			<description>
				Show the polygon linking all the selected numbers.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Show" />
				<attribute name="default" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Show Polygon" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff" />
			</attributelist>
		</attribute>
		<attribute name="showvelocity" get="1" set="1" type="int" size="1">
			<digest>
				Show Velocity
			</digest>
			<description>
				Attribute deciding how the velocity of a point must be mapped visually:
				<m>None</m>: velocity must be graphically ignored<br />
				<m>Colorscale</m>: by changing the lightness of the point inner color<br />
				<m>Colorspectrum</m>: by changing the point inner color over a spectrum of colors (red to blue) <br />
				<m>Alpha</m>: by changing the alpha channel (transparent to full) <br />
				<m>Circle Size</m>: by changing the point circle size
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Show" />
				<attribute name="default" get="1" set="1" type="int" size="1" value="0" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Show Velocity" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
			</attributelist>
		</attribute>
		<attribute name="velocities" get="1" set="1" type="int_array" size="0">
			<digest>
				Velocities
			</digest>
			<description>
				List of the velocities corresponding to the selected points (on element
				for each of the defined <m>points</m>
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Value" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Velocities" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--DISCUSSION-->
	<discussion>
		In the standard framework, the modulo is the number of subdivision of the octave (represented as a circle). The modulo is thus the number of
		points in this circle. The default and most common modulo is 12 (corresponding to semitonal grid). Modulo 24 is the quartertone grid, and so on.
		<br /> <br />
		A pitch-class set is a plain collection of pitch-classes. A pitch class is nothing but the representative of a set of pitches.
		Traditionally, it corresponds to the concept of "note", once we abstract it from its octave.
		For instance, the semitonal framework (when the modulo is 12), all the C belong to the same pitch-class
		which will be named 0 = {..., C-1, C0, C1, C2, C3, C4, C5, ...}. The pitch-class 1 will be the one containing all C#'s (or Db's); pitch-class
		2 will contain all D's, and so on. One will use to name pitch class numbers from 0 to the modulo - 1: indeed, with modulo = 12, pitch-class 12 will coincide
		with pitch-class 0 (it'll be the C one octave higher). One can thus think at pitch-classes as equally spaced points on a clock, and transposing
		means rotating them on the clock. A pitch class set is thus represented just by a plain list of pitch classes, such <b>0 4 7</b>, representing the
		C major chord. Notice that this coincides with any other representation such as <b>12 4 19</b> or <b>0 -8 -5</b>, but the canonical form, where numbers
		are from 0 to the modulo-1 is always preferred. Also for pitch-class sets the order of elements is immaterial, and thus
		<b>0 4 7</b> or <b>4 0 7</b> or <b>7 4 0</b> will all represent the same set.
		On the other hand a pitch-class (as an abstract concept) can be used to represent things other than pitches,
		as for instance temporal position in a rhythmic pattern (loop) having a certain number (the modulo) of equally spaced elements.
		<br /> <br />
	</discussion>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="bach.primeform" />
		<seealso name="bach.pcsetinfo" />
		<seealso name="bach.mod+" />
		<seealso name="bach.mod-" />
		<seealso name="bach.modtimes" />
		<seealso name="bach.compl" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (llll)">
			<description>
				Points, or a 2-depth list of interlaced Points and Velocities.
			</description>
		</entry>
		<entry name ="Inlet 2 (llll)">
			<description>
				Velocities.
			</description>
		</entry>
		<entry name ="Inlet 3 (int)">
			<description>
				Modulo.
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1 (llll)">
			<description>
				Points, as a plain list of point indices.
			</description>
		</entry>
		<entry name ="Outlet 2 (llll)">
			<description>
				Velocities, as a plain list.
			</description>
		</entry>
		<entry name ="Outlet 3 (llll)">
			<description>
				Modulo.
			</description>
		</entry>
		<entry name ="Outlet 4 (bang)">
			<description>
				bang when changed via the interface.
				A bang is output whenever the user changes the diagram via mouse and keyboard
			</description>
		</entry>
	</misc>

	<misc name = "Discussion">
		<entry name ="More details">
			<description>
		In the standard framework, the modulo is the number of subdivision of the octave (represented as a circle). The modulo is thus the number of
		points in this circle. The default and most common modulo is 12 (corresponding to semitonal grid). Modulo 24 is the quartertone grid, and so on.
		<br /> <br />
		A pitch-class set is a plain collection of pitch-classes. A pitch class is nothing but the representative of a set of pitches.
		Traditionally, it corresponds to the concept of "note", once we abstract it from its octave.
		For instance, the semitonal framework (when the modulo is 12), all the C belong to the same pitch-class
		which will be named 0 = {..., C-1, C0, C1, C2, C3, C4, C5, ...}. The pitch-class 1 will be the one containing all C#'s (or Db's); pitch-class
		2 will contain all D's, and so on. One will use to name pitch class numbers from 0 to the modulo - 1: indeed, with modulo = 12, pitch-class 12 will coincide
		with pitch-class 0 (it'll be the C one octave higher). One can thus think at pitch-classes as equally spaced points on a clock, and transposing
		means rotating them on the clock. A pitch class set is thus represented just by a plain list of pitch classes, such <b>0 4 7</b>, representing the
		C major chord. Notice that this coincides with any other representation such as <b>12 4 19</b> or <b>0 -8 -5</b>, but the canonical form, where numbers
		are from 0 to the modulo-1 is always preferred. Also for pitch-class sets the order of elements is immaterial, and thus
		<b>0 4 7</b> or <b>4 0 7</b> or <b>7 4 0</b> will all represent the same set.
		On the other hand a pitch-class (as an abstract concept) can be used to represent things other than pitches,
		as for instance temporal position in a rhythmic pattern (loop) having a certain number (the modulo) of equally spaced elements.
		<br /> <br />
			</description>
		</entry>
		<entry name ="Keywords">
			<description>
circle, diagram, clock, pitch-class, set, rhythm, loop, velocity, select, rotate, transpose, invert, microtone.
			</description>
		</entry>
	</misc>

</c74object>