<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="bach.toc&amp;r" module="bach" kind="patcher">

	<digest>
		Route non-rest and rest elements
	</digest>

	<description>
		Accepts an llll of elements and an llll of reference durations:
		the element of the former corresponding to non-negative reference durations
		(non-rest elements) are output from the first outlet, while the ones corresponding
		to negative reference durations (rest elements) are output from the second outlet.
		Third outlet outputs the position of rest element, for a future reassembling of
		the llll via <o>bach.fromc&amp;r</o>.
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">bachproject</metadata>
		<metadata name="tag">bach</metadata>
		<metadata name="tag">bach abstractions</metadata>
		<metadata name="tag">bach notation</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				The llll of elements
			</digest>
			<description>
			</description>
		</inlet>
		<inlet id="1" type="INLET_TYPE">
			<digest>
				The reference durations llll
			</digest>
			<description>
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				The elements corresponding to non-negative durations (non-rest elements)
			</digest>
			<description>
			</description>
		</outlet>
		<outlet id="1" type="INLET_TYPE">
			<digest>
				The elements corresponding to negative durations (rest elements)
			</digest>
			<description>
			</description>
		</outlet>
		<outlet id="2" type="INLET_TYPE">
			<digest>
				Indices of rest elements for future reinsertion
			</digest>
			<description>
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="bang">
			<arglist />
			<digest>
				Output position indices and routed lllls
			</digest>
			<description>
				Outputs the results (see the <m>llll</m> method) based on most recently received input lllls.
			</description>
		</method>
		<method name="llll">
			<arglist />
			<digest>
				Set llll or reference durations llll, output result
			</digest>
			<description>
				An llll in the first inlet is considered as the llll containing the elements to route.
				Unless the <m>triggers</m> attribute is set to 2, this also outputs the result:
				the indices of elements corresponding to negative durations in the reference durations llll are output
				from the third outlet; the elements situated in the same position of negative elements of the reference
				durations llll are collected and output from the second outlet; finally the elements situated in the same
				position of non-negative elements of the reference durations llll are collected and output from the first
				outlet. <br />
				An llll in the second inlet sets the reference durations llll. If the <m>triggers</m> attribute
				is 2, it also triggers the output of the results (see above). <br />
				The two lllls must have the same structure, and can either be plain lllls, or lists of plain
				lllls, in which case they are considered as being one list for each voice.
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="out" get="1" set="1" type="symbol" size="1">
			<digest>
				Outlet Types
			</digest>
			<description>
				The <m>out</m> attribute is a sequence of characters identifying the outlet types (one character for each llll outlet). Characters can be one of the following: <br />
				<m>n</m> (default): 'native' output: faster and more precise between bach objects, but unreadable by standard Max objects (an "bach.llll" message appears instead). <br />
				<m>t</m>: 'text' output: slower and limited in size, but readable by standard Max objects. A plain llll in text format is a generic Max message.
				To keep the representation invertible (i.e., to allow a bach object receiving a text-format llll to interpret it exactly as if it was native format,
				except for the size limitation), some specific kinds of symbols are preceded by a backtick: namely, symbols containing parens, or containing textual
				representations of numbers or pitches, or beginning with a backtick, plus the symbols "null" and "nil" (distinct from the reserved words
				"null" and "nil" representing the empty list and the empty sublist) are preceded by a backtick. Moreover, the symbols "int", "float" or "list"
				are preceded by a backtick only if they are the first element of an llll, to distinguish them from the corresponding reserved messages of Max. <br />
				<m>m</m>: 'max' output: mostly equivalent to the "t" specifier, but no symbol is backticket except "int", "float" and "list" at the beginning of an llll.
				It is important to notice that, differently from text-format lllls proper, Max-format lllls might not be invertible even if they do not reach the size
				limit for Max message. This means that a bach object receiving a Max-format llll output from another bach object might interpret it differently
				from the original, or in some cases might even reject it. <br />
				<m>x</m>: disabled output (nothing is output) <br />
				<m>p</m>: 'portal' output: only used by bach.portal to intercept the @out attribute specified while creating the abstraction (see bach.portal). <br />
				The native output is recommended, unless communication with standard Max messages is needed.
				Disabling unused outputs can be useful if extreme optimization of the patch is needed.
				<br /> <br />
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outlet Types" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="triggers" get="1" set="1" type="int" size="1">
			<digest>
				Triggers
			</digest>
			<description>
				Index of the inlet triggering the output; this can be
				0, 1 or 2 (0 meaning: all inlets; the default is 1: left inlet).
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Triggers" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--DISCUSSION-->
	<discussion>
		<o>bach.toc&amp;r</o> is especially useful in combination with <o>bach.fromc&amp;r</o>
		in order to perform different operations on the set of elements corresponding
		to rests and to non-rests.
	</discussion>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="bach.fromc&amp;r" />
		<seealso name="bach.insert" />
		<seealso name="bach.chordrot" />
		<seealso name="bach.chordrev" />
		<seealso name="bach.restrot bach.score" />
		<seealso name="04-Through The Looking Glass" module="bach" type="tutorial" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (llll)">
			<description>
				The llll of elements.
			</description>
		</entry>
		<entry name ="Inlet 2 (llll)">
			<description>
				The reference durations llll.
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1 (llll)">
			<description>
				The elements corresponding to non-negative durations (non-rest elements).
			</description>
		</entry>
		<entry name ="Outlet 2 (llll)">
			<description>
				The elements corresponding to negative durations (rest elements).
			</description>
		</entry>
		<entry name ="Outlet 3 (llll)">
			<description>
				Indices of rest elements for future reinsertion.
			</description>
		</entry>
	</misc>

	<misc name = "Discussion">
		<entry name ="More details">
			<description>
		<o>bach.toc&amp;r</o> is especially useful in combination with <o>bach.fromc&amp;r</o>
		in order to perform different operations on the set of elements corresponding
		to rests and to non-rests.
			</description>
		</entry>
		<entry name ="Keywords">
			<description>
chord, rest, convert, route, divide, split, position, index.
			</description>
		</entry>
	</misc>

</c74object>