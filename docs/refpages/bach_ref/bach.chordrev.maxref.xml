<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="bach.chordrev" module="bach" kind="patcher">

	<digest>
		Reverse the non-rest elements of an llll
	</digest>

	<description>
		Accepts an llll to reverse, an llll of reference durations,
		and reverses only the elements of the left llll corresponding to non-negative elements in the
		durations llll.<br />
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">bachproject</metadata>
		<metadata name="tag">bach</metadata>
		<metadata name="tag">bach abstractions</metadata>
		<metadata name="tag">bach notation</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				The llll to reverse
			</digest>
			<description>
			</description>
		</inlet>
		<inlet id="1" type="INLET_TYPE">
			<digest>
				The reference durations llll
			</digest>
			<description>
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				The reversed llll
			</digest>
			<description>
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="bang">
			<arglist />
			<digest>
				Reverse non-rest elements
			</digest>
			<description>
				Performs the operation on most recently received input lllls.
			</description>
		</method>
		<method name="llll">
			<arglist />
			<digest>
				Set llll or reference durations llll, output result
			</digest>
			<description>
				An llll in the first inlet is considered as the llll containing the parameter data
				to be reversed: its elements situated in the same position of positive elements of the reference durations llll are thus
				reversed and the result is output (unless the <m>triggers</m> attribute is set to 2).
				The elements corresponding to negative durations are left untouched. <br />
				An llll in the second inlet sets the reference durations llll. If the <m>triggers</m> attribute
				is 2, it also triggers the output of the rotation. <br />
				The two lllls must have the same structure, and can either be plain lllls, or lists of plain
				lllls, in which case they are considered as being one list for each voice.
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="out" get="1" set="1" type="symbol" size="1">
			<digest>
				Outlet Types
			</digest>
			<description>
				The <m>out</m> attribute is a sequence of characters identifying the outlet types (one character for each llll outlet). Characters can be one of the following: <br />
				<m>n</m> (default): 'native' output: faster and more precise between bach objects, but unreadable by standard Max objects (an "bach.llll" message appears instead). <br />
				<m>t</m>: 'text' output: slower and limited in size, but readable by standard Max objects. A plain llll in text format is a generic Max message.
				To keep the representation invertible (i.e., to allow a bach object receiving a text-format llll to interpret it exactly as if it was native format,
				except for the size limitation), some specific kinds of symbols are preceded by a backtick: namely, symbols containing parens, or containing textual
				representations of numbers or pitches, or beginning with a backtick, plus the symbols "null" and "nil" (distinct from the reserved words
				"null" and "nil" representing the empty list and the empty sublist) are preceded by a backtick. Moreover, the symbols "int", "float" or "list"
				are preceded by a backtick only if they are the first element of an llll, to distinguish them from the corresponding reserved messages of Max. <br />
				<m>m</m>: 'max' output: mostly equivalent to the "t" specifier, but no symbol is backticket except "int", "float" and "list" at the beginning of an llll.
				It is important to notice that, differently from text-format lllls proper, Max-format lllls might not be invertible even if they do not reach the size
				limit for Max message. This means that a bach object receiving a Max-format llll output from another bach object might interpret it differently
				from the original, or in some cases might even reject it. <br />
				<m>x</m>: disabled output (nothing is output) <br />
				<m>p</m>: 'portal' output: only used by bach.portal to intercept the @out attribute specified while creating the abstraction (see bach.portal). <br />
				The native output is recommended, unless communication with standard Max messages is needed.
				Disabling unused outputs can be useful if extreme optimization of the patch is needed.
				<br /> <br />
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outlet Types" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="triggers" get="1" set="1" type="int" size="1">
			<digest>
				Triggers
			</digest>
			<description>
				Index of the inlet triggering the output (by default 1: left inlet).
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Triggers" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--DISCUSSION-->
	<discussion>
		<o>bach.chordrev</o> is especially useful to reverse parameters like cents,
		velocities or extras, without affecting the elements corresponding to rests. <br />
		<o>bach.chordrev</o> also accepts lllls of depth 2, considering them to be a list for each voice,
		and operates accordingly.
	</discussion>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="bach.tierev" />
		<seealso name="bach.chordrot" />
		<seealso name="bach.restrot" />
		<seealso name="bach.fromc&amp;r" />
		<seealso name="bach.toc&amp;r" />
		<seealso name="bach.score" />
		<seealso name="04-Through The Looking Glass" module="bach" type="tutorial" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (llll)">
			<description>
				The llll to reverse.
			</description>
		</entry>
		<entry name ="Inlet 2 (llll)">
			<description>
				The reference durations llll.
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1 (llll)">
			<description>
				The reversed llll.
			</description>
		</entry>
	</misc>

	<misc name = "Discussion">
		<entry name ="More details">
			<description>
		<o>bach.chordrev</o> is especially useful to reverse parameters like cents,
		velocities or extras, without affecting the elements corresponding to rests. <br />
		<o>bach.chordrev</o> also accepts lllls of depth 2, considering them to be a list for each voice,
		and operates accordingly.
			</description>
		</entry>
		<entry name ="Keywords">
			<description>
chord, reverse, sequence, ties, duration, retrograde.
			</description>
		</entry>
	</misc>

</c74object>