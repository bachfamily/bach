<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="bach.matrixctrl2m" module="bach" kind="patcher">

	<digest>
		Convert a matrixctrl object into an llll matrix
	</digest>

	<description>
		Converts the information contained in a
		<o>matrixctrl</o> into an llll matrix.
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">bachproject</metadata>
		<metadata name="tag">bach</metadata>
		<metadata name="tag">bach abstractions</metadata>
		<metadata name="tag">bach matrix calculus</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				bang to perform conversion
			</digest>
			<description>
			</description>
		</inlet>
		<inlet id="1" type="INLET_TYPE">
			<digest>
				Messages from matrixctrl's right outlet
			</digest>
			<description>
				<o>matrixctrl</o>'s right outlet must be connected with
				<o>bach.matrixctrl2m</o>'s right inlet.
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				Converted matrix in llll form
			</digest>
			<description>
			</description>
		</outlet>
		<outlet id="1" type="INLET_TYPE">
			<digest>
				Messages for matrixctrl's inlet
			</digest>
			<description>
				<o>bach.matrixctrl2m</o>'s right outlet must be connected with
				<o>matrixctrl</o>'s inlet.
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="bang">
			<arglist />
			<digest>
				Perform conversion
			</digest>
			<description>
				Performs the conversion on the most recently received input data.
			</description>
		</method>
		<method name="list">
			<arglist />
			<digest>
				Messages from matrixctrl's right outlet
			</digest>
			<description>
				A list in the second inlet is expected to contain
				all the messages coming from <o>matrixctrl</o>'s right outlet. Just connect
				<o>matrixctrl</o>'s right outlet with <o>bach.matrixctrl2m</o>'s right inlet
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="out" get="1" set="1" type="symbol" size="1">
			<digest>
				Outlet Types
			</digest>
			<description>
				The <m>out</m> attribute is a sequence of characters identifying the outlet types (one character for each llll outlet). Characters can be one of the following: <br />
				<m>n</m> (default): 'native' output: faster and more precise between bach objects, but unreadable by standard Max objects (an "bach.llll" message appears instead). <br />
				<m>t</m>: 'text' output: slower and limited in size, but readable by standard Max objects. A plain llll in text format is a generic Max message.
				To keep the representation invertible (i.e., to allow a bach object receiving a text-format llll to interpret it exactly as if it was native format,
				except for the size limitation), some specific kinds of symbols are preceded by a backtick: namely, symbols containing parens, or containing textual
				representations of numbers or pitches, or beginning with a backtick, plus the symbols "null" and "nil" (distinct from the reserved words
				"null" and "nil" representing the empty list and the empty sublist) are preceded by a backtick. Moreover, the symbols "int", "float" or "list"
				are preceded by a backtick only if they are the first element of an llll, to distinguish them from the corresponding reserved messages of Max. <br />
				<m>m</m>: 'max' output: mostly equivalent to the "t" specifier, but no symbol is backticket except "int", "float" and "list" at the beginning of an llll.
				It is important to notice that, differently from text-format lllls proper, Max-format lllls might not be invertible even if they do not reach the size
				limit for Max message. This means that a bach object receiving a Max-format llll output from another bach object might interpret it differently
				from the original, or in some cases might even reject it. <br />
				<m>x</m>: disabled output (nothing is output) <br />
				<m>p</m>: 'portal' output: only used by bach.portal to intercept the @out attribute specified while creating the abstraction (see bach.portal). <br />
				The native output is recommended, unless communication with standard Max messages is needed.
				Disabling unused outputs can be useful if extreme optimization of the patch is needed.
				<br /> <br />
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outlet Types" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--DISCUSSION-->
	<discussion>
		In order to perform the conversion, the right outlet of
		<o>bach.matrixctrl2m</o> has to be connected with the inlet
		of <o>matrixctrl</o>, and the right outlet of <o>matrixctrl</o>
		has to be connected with the right inlet of <o>bach.matrixctrl2m</o>. <br />
		In the bach environment, a matrix is just a llll having depth two, whose first-level sublllls are the rows of the matrix.
		For instance the matrix <b>[1 0 0] [0 1 0] [0 0 1]</b> is the 3 by 3 identity matrix. A "good" matrix is supposed to be well formed,
		i.e. all its rows must have the same length. A matrix is square if the length of the rows (which is the number of columns) is the same
		as the number of rows.
		<br /> <br />
	</discussion>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="matrixctrl" />
		<seealso name="bach.m2matrixctrl" />
		<seealso name="16-Into The Matrix" module="bach" type="tutorial" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (bang)">
			<description>
				bang to perform conversion.
			</description>
		</entry>
		<entry name ="Inlet 2 (list)">
			<description>
				Messages from matrixctrl's right outlet.
				<o>matrixctrl</o>'s right outlet must be connected with
				<o>bach.matrixctrl2m</o>'s right inlet.
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1 (llll)">
			<description>
				Converted matrix in llll form.
			</description>
		</entry>
		<entry name ="Outlet 2 (list)">
			<description>
				Messages for matrixctrl's inlet.
				<o>bach.matrixctrl2m</o>'s right outlet must be connected with
				<o>matrixctrl</o>'s inlet.
			</description>
		</entry>
	</misc>

	<misc name = "Discussion">
		<entry name ="More details">
			<description>
		In order to perform the conversion, the right outlet of
		<o>bach.matrixctrl2m</o> has to be connected with the inlet
		of <o>matrixctrl</o>, and the right outlet of <o>matrixctrl</o>
		has to be connected with the right inlet of <o>bach.matrixctrl2m</o>. <br />
		In the bach environment, a matrix is just a llll having depth two, whose first-level sublllls are the rows of the matrix.
		For instance the matrix <b>[1 0 0] [0 1 0] [0 0 1]</b> is the 3 by 3 identity matrix. A "good" matrix is supposed to be well formed,
		i.e. all its rows must have the same length. A matrix is square if the length of the rows (which is the number of columns) is the same
		as the number of rows.
		<br /> <br />
			</description>
		</entry>
		<entry name ="Keywords">
			<description>
matrix, matrixctrl, convert.
			</description>
		</entry>
	</misc>

</c74object>